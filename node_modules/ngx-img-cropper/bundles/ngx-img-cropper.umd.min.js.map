{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-img-cropper/lib/image-cropper/cropper-draw-settings.ts","ng://ngx-img-cropper/lib/image-cropper/cropper-settings.ts","ng://ngx-img-cropper/lib/image-cropper/exif.ts","ng://ngx-img-cropper/lib/image-cropper/model/point.ts","ng://ngx-img-cropper/lib/image-cropper/model/pointPool.ts","ng://ngx-img-cropper/lib/image-cropper/model/bounds.ts","ng://ngx-img-cropper/lib/image-cropper/model/handle.ts","ng://ngx-img-cropper/lib/image-cropper/model/cornerMarker.ts","ng://ngx-img-cropper/lib/image-cropper/model/cropTouch.ts","ng://ngx-img-cropper/lib/image-cropper/model/dragMarker.ts","ng://ngx-img-cropper/lib/image-cropper/model/imageCropperModel.ts","ng://ngx-img-cropper/lib/image-cropper/imageCropperDataShare.ts","ng://ngx-img-cropper/lib/image-cropper/imageCropper.ts","ng://ngx-img-cropper/lib/image-cropper/model/cropPosition.ts","ng://ngx-img-cropper/lib/image-cropper/image-cropper.component.ts","ng://ngx-img-cropper/lib/image-cropper/image-cropper.module.ts","ng://ngx-img-cropper/lib/image-cropper/image-cropper.service.ts","ng://ngx-img-cropper/lib/image-cropper/model/cropService.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","CropperDrawSettings","settings","lineDash","strokeWidth","strokeColor","fillColor","dragIconStrokeWidth","dragIconStrokeColor","dragIconFillColor","backgroundFillColor","CropperSettings","canvasWidth","canvasHeight","dynamicSizing","width","height","minWidth","minHeight","minWithRelativeToResolution","croppedWidth","croppedHeight","cropperDrawSettings","touchRadius","noFileInput","markerSizeMultiplier","centerTouchRadius","showCenterMarker","allowedFilesRegex","cropOnResize","preserveSize","compressRatio","_rounded","_keepAspect","assign","defineProperty","val","console","error","Fraction","tslib_1.__extends","Number","Exif","debug","IptcFieldMap","120","110","25","55","80","85","122","105","116","15","Tags","36864","40960","40961","40962","40963","37121","37122","37500","37510","40964","36867","36868","37520","37521","37522","33434","33437","34850","34852","34855","34856","37377","37378","37379","37380","37381","37382","37383","37384","37385","37396","37386","41483","41484","41486","41487","41488","41492","41493","41495","41728","41729","41730","41985","41986","41987","41988","41989","41990","41991","41992","41993","41994","41995","41996","40965","42016","TiffTags","256","257","34665","34853","258","259","262","274","277","284","530","531","282","283","296","273","278","279","513","514","301","318","319","529","532","306","270","271","272","305","315","33432","GPSTags","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","16","17","18","19","20","21","22","23","24","26","27","28","29","30","StringValues","ExposureProgram","MeteringMode","255","LightSource","Flash","31","32","65","69","71","73","77","79","89","93","95","SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource","Components","addEvent","element","event","handler","addEventListener","attachEvent","imageHasData","img","exifdata","base64ToArrayBuffer","base64","replace","binary","atob","len","buffer","ArrayBuffer","view","Uint8Array","charCodeAt","objectURLToBlob","url","callback","http","XMLHttpRequest","open","responseType","onload","status","response","send","getImageData","_this","handleBinaryFile","binFile","data","findEXIFinJPEG","iptcdata","findIPTCinJPEG","src","test","arrayBuffer","fileReader_1","FileReader","e","target","result","blob","readAsArrayBuffer","http_1","Error","Blob","File","fileReader","log","byteLength","file","dataView","DataView","getUint8","marker","offset","readEXIFData","getUint16","_dataView","_offset","nameHeaderLength","startOffset","sectionLength","readIPTCData","fieldValue","fieldName","dataSize","segmentType","segmentStartPos","getInt16","getStringFromDB","push","readTags","tiffStart","dirStart","strings","bigEnd","entryOffset","tag","entries","tags","readTagValue","vals","n","numerator","denominator","type","numValues","getUint32","valueOffset","getInt32","start","outstr","String","fromCharCode","exifData","gpsData","tiffOffset","firstIFDOffset","ExifIFDPointer","GPSInfoIFDPointer","checkImageType","Image","HTMLImageElement","getData","complete","getTag","getAllTags","a","pretty","strPretty","readFromBinaryFile","args","_i","arguments","Point","x","y","myNext","myPrev","PointPool","initialSize","prev","firstAvailable","borrow","borrowed","returnPoint","Bounds","left","right","top","bottom","getCentre","w","h","instance","Handle","radius","cropperSettings","over","drag","_position","setDrag","setOver","draw","ctx","touchInBounds","position","setPosition","CornerMarker","_super","drawCornerBorder","sideLength","hDirection","vDirection","horizontalNeighbour","verticalNeighbour","beginPath","setLineDash","lineJoin","moveTo","lineTo","closePath","lineWidth","strokeStyle","stroke","drawCornerFill","rounded","offX","Math","round","sin","PI","abs","offY","fillStyle","fill","moveX","moveY","move","addHorizontalNeighbour","neighbour","addVerticalNeighbour","getHorizontalNeighbour","getVerticalNeighbour","CropTouch","id","DragMarker","iconPoints","scaledIconPoints","getDragIconPoints","drawIcon","arr","scale","maxLength","arrowWidth","arrowLength","connectorThroat","points","points_1","tslib_1.__values","points_1_1","recalculatePosition","bounds","c","ImageCropperModel","ImageCropperDataShare","share","setPressed","canvas","pressed","setReleased","setStyle","style","undefined","ImageCropper","imageCropperDataShare","keepAspect","crop","aspectRatio","currentDragTouches","isMouseDown","ratioW","ratioH","fileType","imageSet","pointPool","tl","tr","bl","br","markers","center","croppedImage","currentlyInteracting","cropWidth","cropHeight","sign","NaN","getMousePos","evt","rect","getBoundingClientRect","clientX","clientY","getTouchPos","touch","detectVerticalSquash","ih","document","createElement","getContext","drawImage","imageData","sy","ey","py","ratio","getDataUriMimeType","dataUri","dataUriSubstring","substring","mimeType","matches","RegExp","exec","prepare","cropCanvas","responsiveWidth","parentElement","clientWidth","updateSettings","resizeCanvas","setImage","srcImage","reset","getBounds","clearRect","sourceAspect","canvasAspect","drawImageIOSFix","fillRect","save","arc","clip","restore","max","strokeRect","dragCenter","maxXClamp","minXClamp","minYClamp","maxYClamp","enforceMinSize","xLength","yLength","xOver","yOver","dragCorner","anchorMarker","iX","iY","ax","ay","newHeight","newWidth","newY","newX","fold","getSide","min","handleRelease","newCropTouch","index","k","dragHandle","splice","handleMove","matched","dragTouch","clampedPositions","clampPosition","_b","_c","updateClampBounds","getCropBounds","isImageSet","cropPosition","getCropPositionFromMarkers","setCropPosition","updateCropPosition","cropBounds","getCropPositionFromBounds","cropPosition_1","cropPosition_1_1","vertSquashRatio","getCroppedImageHelper","tlPos","trPos","blPos","brPos","cropAspect","cX","cY","imageH","cropW","imageW","cropH","marginTop","marginLeft","actualH","actualW","actualX","actualY","scaledW","scaledH","fillWidth","fillHeight","getCroppedImage","offsetH","offsetW","resampleFn","toDataURL","minX","MAX_VALUE","minY","maxX","maxY","setBounds","currentBounds","onTouchMove","touches","preventDefault","touchPosition","cropTouch","identifier","distance","previousDistance","onMouseMove","mousePosition","getDragTouchForID","drawCursors","cursorDrawn","drawCornerCursor","didDraw","onTouchStart","onTouchEnd","changedTouches","sx","sw","sh","dx","dy","dw","dh","onMouseDown","onMouseUp","CropPosition","toBounds","isInitialized","ImageCropperComponent","renderer","cropPositionChange","EventEmitter","exif","onCrop","ngAfterViewInit","cropcanvas","nativeElement","cropperClass","setAttribute","windowListener","resize","bind","window","toString","cropper","ngOnChanges","changes","isCropPositionChanged","image","emit","updateCropBounds","inputImage","currentValue","ngOnDestroy","removeEventListener","fileChangeListener","$event","files","name","image_1","loadEvent","readAsDataURL","offsetWidth","offsetHeight","newBounds","croppingClass","raf","requestAnimationFrame","cancelAnimationFrame","naturalHeight","naturalWidth","getOrientedImage","original","isCropPositionUpdateNeeded","cropBound","orientation","indexOf","cw","ch","cx","cy","deg","rotate","Component","selector","template","Renderer2","ViewChild","static","Input","Output","ImageCropperModule","NgModule","declarations","exports","imports","CommonModule","ImageCropperService","Injectable","providedIn","CropService","init"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class CropperDrawSettings {\r\n  public lineDash = false;\r\n  public strokeWidth = 1;\r\n  public strokeColor = 'rgba(255,255,255,1)';\r\n  public fillColor = 'rgba(255,255,255,1)';\r\n  public dragIconStrokeWidth = 1;\r\n  public dragIconStrokeColor = 'rgba(0,0,0,1)';\r\n  public dragIconFillColor = 'rgba(255,255,255,1)';\r\n  public backgroundFillColor = 'rgba(0,0,0,0.6)';\r\n\r\n  constructor(settings?: any) {\r\n    if (typeof settings === 'object') {\r\n      this.lineDash = settings.lineDash || this.lineDash;\r\n      this.strokeWidth = settings.strokeWidth || this.strokeWidth;\r\n      this.fillColor = settings.fillColor || this.fillColor;\r\n      this.strokeColor = settings.strokeColor || this.strokeColor;\r\n      this.dragIconStrokeWidth =\r\n        settings.dragIconStrokeWidth || this.dragIconStrokeWidth;\r\n      this.dragIconStrokeColor =\r\n        settings.dragIconStrokeColor || this.dragIconStrokeColor;\r\n      this.dragIconFillColor =\r\n        settings.dragIconFillColor || this.dragIconFillColor;\r\n      this.backgroundFillColor =\r\n        settings.backgroundFillColor || this.backgroundFillColor;\r\n    }\r\n  }\r\n}\r\n","import { CropperDrawSettings } from './cropper-draw-settings';\r\n\r\nexport interface ICropperSettings {\r\n  canvasWidth?: number;\r\n  canvasHeight?: number;\r\n  dynamicSizing?: boolean;\r\n  cropperClass?: string;\r\n  croppingClass?: string;\r\n  width?: number;\r\n  height?: number;\r\n  minWidth?: number;\r\n  minHeight?: number;\r\n  minWithRelativeToResolution?: boolean;\r\n  croppedWidth?: number;\r\n  croppedHeight?: number;\r\n  cropperDrawSettings?: any;\r\n  touchRadius?: number;\r\n  noFileInput?: boolean;\r\n  fileType?: string;\r\n  resampleFn?: (c: HTMLCanvasElement) => void;\r\n  markerSizeMultiplier?: number;\r\n  centerTouchRadius?: number;\r\n  showCenterMarker?: boolean;\r\n  allowedFilesRegex?: RegExp;\r\n  cropOnResize?: boolean;\r\n  preserveSize?: boolean;\r\n  compressRatio?: number;\r\n  rounded?: boolean;\r\n  keepAspect?: boolean;\r\n}\r\n\r\nexport class CropperSettings implements ICropperSettings {\r\n  public canvasWidth = 300;\r\n  public canvasHeight = 300;\r\n\r\n  public dynamicSizing = false;\r\n  public cropperClass: string;\r\n  public croppingClass: string;\r\n\r\n  public width = 200;\r\n  public height = 200;\r\n\r\n  public minWidth = 50;\r\n  public minHeight = 50;\r\n  public minWithRelativeToResolution = true;\r\n\r\n  public croppedWidth = 100;\r\n  public croppedHeight = 100;\r\n\r\n  public cropperDrawSettings: CropperDrawSettings = new CropperDrawSettings();\r\n  public touchRadius = 20;\r\n  public noFileInput = false;\r\n\r\n  public fileType: string;\r\n\r\n  public resampleFn: (c: HTMLCanvasElement) => void;\r\n\r\n  public markerSizeMultiplier = 1;\r\n  public centerTouchRadius = 20;\r\n  public showCenterMarker = true;\r\n\r\n  public allowedFilesRegex: RegExp = /\\.(jpe?g|png|gif|bmp)$/i;\r\n  public cropOnResize = true;\r\n  public preserveSize = false;\r\n\r\n  public compressRatio = 1.0;\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  private _rounded = false;\r\n  // tslint:disable-next-line:variable-name\r\n  private _keepAspect = true;\r\n\r\n  constructor(settings?: ICropperSettings) {\r\n    if (typeof settings === 'object') {\r\n      Object.assign(this, settings);\r\n    }\r\n  }\r\n\r\n  set rounded(val: boolean) {\r\n    this._rounded = val;\r\n    if (val) {\r\n      this._keepAspect = true;\r\n    }\r\n  }\r\n\r\n  get rounded(): boolean {\r\n    return this._rounded;\r\n  }\r\n\r\n  set keepAspect(val: boolean) {\r\n    this._keepAspect = val;\r\n    if (this._rounded === true && this._keepAspect === false) {\r\n      console.error(\r\n        'Cannot set keep aspect to false on rounded cropper. Ellipsis not supported'\r\n      );\r\n      this._keepAspect = true;\r\n    }\r\n  }\r\n\r\n  get keepAspect(): boolean {\r\n    return this._keepAspect;\r\n  }\r\n}\r\n","export class Fraction extends Number {\r\n  numerator: number;\r\n  denominator: number;\r\n}\r\n\r\nexport interface IImageExtended extends HTMLImageElement {\r\n  exifdata: any;\r\n  iptcdata: any;\r\n}\r\n\r\nexport class Exif {\r\n  public debug = false;\r\n\r\n  public IptcFieldMap: any = {\r\n    0x78: 'caption',\r\n    0x6e: 'credit',\r\n    0x19: 'keywords',\r\n    0x37: 'dateCreated',\r\n    0x50: 'byline',\r\n    0x55: 'bylineTitle',\r\n    0x7a: 'captionWriter',\r\n    0x69: 'headline',\r\n    0x74: 'copyright',\r\n    0x0f: 'category'\r\n  };\r\n\r\n  public Tags: any = {\r\n    // version tags\r\n    0x9000: 'ExifVersion', // EXIF version\r\n    0xa000: 'FlashpixVersion', // Flashpix format version\r\n\r\n    // colorspace tags\r\n    0xa001: 'ColorSpace', // Color space information tag\r\n\r\n    // image configuration\r\n    0xa002: 'PixelXDimension', // Valid width of meaningful image\r\n    0xa003: 'PixelYDimension', // Valid height of meaningful image\r\n    0x9101: 'ComponentsConfiguration', // Information about channels\r\n    0x9102: 'CompressedBitsPerPixel', // Compressed bits per pixel\r\n\r\n    // user information\r\n    0x927c: 'MakerNote', // Any desired information written by the manufacturer\r\n    0x9286: 'UserComment', // Comments by user\r\n\r\n    // related file\r\n    0xa004: 'RelatedSoundFile', // Name of related sound file\r\n\r\n    // date and time\r\n    0x9003: 'DateTimeOriginal', // Date and time when the original image was generated\r\n    0x9004: 'DateTimeDigitized', // Date and time when the image was stored digitally\r\n    0x9290: 'SubsecTime', // Fractions of seconds for DateTime\r\n    0x9291: 'SubsecTimeOriginal', // Fractions of seconds for DateTimeOriginal\r\n    0x9292: 'SubsecTimeDigitized', // Fractions of seconds for DateTimeDigitized\r\n\r\n    // picture-taking conditions\r\n    0x829a: 'ExposureTime', // Exposure time (in seconds)\r\n    0x829d: 'FNumber', // F number\r\n    0x8822: 'ExposureProgram', // Exposure program\r\n    0x8824: 'SpectralSensitivity', // Spectral sensitivity\r\n    0x8827: 'ISOSpeedRatings', // ISO speed rating\r\n    0x8828: 'OECF', // Optoelectric conversion factor\r\n    0x9201: 'ShutterSpeedValue', // Shutter speed\r\n    0x9202: 'ApertureValue', // Lens aperture\r\n    0x9203: 'BrightnessValue', // Value of brightness\r\n    0x9204: 'ExposureBias', // Exposure bias\r\n    0x9205: 'MaxApertureValue', // Smallest F number of lens\r\n    0x9206: 'SubjectDistance', // Distance to subject in meters\r\n    0x9207: 'MeteringMode', // Metering mode\r\n    0x9208: 'LightSource', // Kind of light source\r\n    0x9209: 'Flash', // Flash status\r\n    0x9214: 'SubjectArea', // Location and area of main subject\r\n    0x920a: 'FocalLength', // Focal length of the lens in mm\r\n    0xa20b: 'FlashEnergy', // Strobe energy in BCPS\r\n    0xa20c: 'SpatialFrequencyResponse', //\r\n    0xa20e: 'FocalPlaneXResolution', // Number of pixels in width direction per FocalPlaneResolutionUnit\r\n    0xa20f: 'FocalPlaneYResolution', // Number of pixels in height direction per FocalPlaneResolutionUnit\r\n    0xa210: 'FocalPlaneResolutionUnit', // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\r\n    0xa214: 'SubjectLocation', // Location of subject in image\r\n    0xa215: 'ExposureIndex', // Exposure index selected on camera\r\n    0xa217: 'SensingMethod', // Image sensor type\r\n    0xa300: 'FileSource', // Image source (3 == DSC)\r\n    0xa301: 'SceneType', // Scene type (1 == directly photographed)\r\n    0xa302: 'CFAPattern', // Color filter array geometric pattern\r\n    0xa401: 'CustomRendered', // Special processing\r\n    0xa402: 'ExposureMode', // Exposure mode\r\n    0xa403: 'WhiteBalance', // 1 = auto white balance, 2 = manual\r\n    0xa404: 'DigitalZoomRation', // Digital zoom ratio\r\n    0xa405: 'FocalLengthIn35mmFilm', // Equivalent foacl length assuming 35mm film camera (in mm)\r\n    0xa406: 'SceneCaptureType', // Type of scene\r\n    0xa407: 'GainControl', // Degree of overall image gain adjustment\r\n    0xa408: 'Contrast', // Direction of contrast processing applied by camera\r\n    0xa409: 'Saturation', // Direction of saturation processing applied by camera\r\n    0xa40a: 'Sharpness', // Direction of sharpness processing applied by camera\r\n    0xa40b: 'DeviceSettingDescription', //\r\n    0xa40c: 'SubjectDistanceRange', // Distance to subject\r\n\r\n    // other tags\r\n    0xa005: 'InteroperabilityIFDPointer',\r\n    0xa420: 'ImageUniqueID' // Identifier assigned uniquely to each image\r\n  };\r\n\r\n  public TiffTags: any = {\r\n    0x0100: 'ImageWidth',\r\n    0x0101: 'ImageHeight',\r\n    0x8769: 'ExifIFDPointer',\r\n    0x8825: 'GPSInfoIFDPointer',\r\n    0xa005: 'InteroperabilityIFDPointer',\r\n    0x0102: 'BitsPerSample',\r\n    0x0103: 'Compression',\r\n    0x0106: 'PhotometricInterpretation',\r\n    0x0112: 'Orientation',\r\n    0x0115: 'SamplesPerPixel',\r\n    0x011c: 'PlanarConfiguration',\r\n    0x0212: 'YCbCrSubSampling',\r\n    0x0213: 'YCbCrPositioning',\r\n    0x011a: 'XResolution',\r\n    0x011b: 'YResolution',\r\n    0x0128: 'ResolutionUnit',\r\n    0x0111: 'StripOffsets',\r\n    0x0116: 'RowsPerStrip',\r\n    0x0117: 'StripByteCounts',\r\n    0x0201: 'JPEGInterchangeFormat',\r\n    0x0202: 'JPEGInterchangeFormatLength',\r\n    0x012d: 'TransferFunction',\r\n    0x013e: 'WhitePoint',\r\n    0x013f: 'PrimaryChromaticities',\r\n    0x0211: 'YCbCrCoefficients',\r\n    0x0214: 'ReferenceBlackWhite',\r\n    0x0132: 'DateTime',\r\n    0x010e: 'ImageDescription',\r\n    0x010f: 'Make',\r\n    0x0110: 'Model',\r\n    0x0131: 'Software',\r\n    0x013b: 'Artist',\r\n    0x8298: 'Copyright'\r\n  };\r\n\r\n  public GPSTags: any = {\r\n    0x0000: 'GPSVersionID',\r\n    0x0001: 'GPSLatitudeRef',\r\n    0x0002: 'GPSLatitude',\r\n    0x0003: 'GPSLongitudeRef',\r\n    0x0004: 'GPSLongitude',\r\n    0x0005: 'GPSAltitudeRef',\r\n    0x0006: 'GPSAltitude',\r\n    0x0007: 'GPSTimeStamp',\r\n    0x0008: 'GPSSatellites',\r\n    0x0009: 'GPSStatus',\r\n    0x000a: 'GPSMeasureMode',\r\n    0x000b: 'GPSDOP',\r\n    0x000c: 'GPSSpeedRef',\r\n    0x000d: 'GPSSpeed',\r\n    0x000e: 'GPSTrackRef',\r\n    0x000f: 'GPSTrack',\r\n    0x0010: 'GPSImgDirectionRef',\r\n    0x0011: 'GPSImgDirection',\r\n    0x0012: 'GPSMapDatum',\r\n    0x0013: 'GPSDestLatitudeRef',\r\n    0x0014: 'GPSDestLatitude',\r\n    0x0015: 'GPSDestLongitudeRef',\r\n    0x0016: 'GPSDestLongitude',\r\n    0x0017: 'GPSDestBearingRef',\r\n    0x0018: 'GPSDestBearing',\r\n    0x0019: 'GPSDestDistanceRef',\r\n    0x001a: 'GPSDestDistance',\r\n    0x001b: 'GPSProcessingMethod',\r\n    0x001c: 'GPSAreaInformation',\r\n    0x001d: 'GPSDateStamp',\r\n    0x001e: 'GPSDifferential'\r\n  };\r\n\r\n  public StringValues: any = {\r\n    ExposureProgram: {\r\n      0: 'Not defined',\r\n      1: 'Manual',\r\n      2: 'Normal program',\r\n      3: 'Aperture priority',\r\n      4: 'Shutter priority',\r\n      5: 'Creative program',\r\n      6: 'Action program',\r\n      7: 'Portrait mode',\r\n      8: 'Landscape mode'\r\n    },\r\n    MeteringMode: {\r\n      0: 'Unknown',\r\n      1: 'Average',\r\n      2: 'CenterWeightedAverage',\r\n      3: 'Spot',\r\n      4: 'MultiSpot',\r\n      5: 'Pattern',\r\n      6: 'Partial',\r\n      255: 'Other'\r\n    },\r\n    LightSource: {\r\n      0: 'Unknown',\r\n      1: 'Daylight',\r\n      2: 'Fluorescent',\r\n      3: 'Tungsten (incandescent light)',\r\n      4: 'Flash',\r\n      9: 'Fine weather',\r\n      10: 'Cloudy weather',\r\n      11: 'Shade',\r\n      12: 'Daylight fluorescent (D 5700 - 7100K)',\r\n      13: 'Day white fluorescent (N 4600 - 5400K)',\r\n      14: 'Cool white fluorescent (W 3900 - 4500K)',\r\n      15: 'White fluorescent (WW 3200 - 3700K)',\r\n      17: 'Standard light A',\r\n      18: 'Standard light B',\r\n      19: 'Standard light C',\r\n      20: 'D55',\r\n      21: 'D65',\r\n      22: 'D75',\r\n      23: 'D50',\r\n      24: 'ISO studio tungsten',\r\n      255: 'Other'\r\n    },\r\n    Flash: {\r\n      0x0000: 'Flash did not fire',\r\n      0x0001: 'Flash fired',\r\n      0x0005: 'Strobe return light not detected',\r\n      0x0007: 'Strobe return light detected',\r\n      0x0009: 'Flash fired, compulsory flash mode',\r\n      0x000d: 'Flash fired, compulsory flash mode, return light not detected',\r\n      0x000f: 'Flash fired, compulsory flash mode, return light detected',\r\n      0x0010: 'Flash did not fire, compulsory flash mode',\r\n      0x0018: 'Flash did not fire, auto mode',\r\n      0x0019: 'Flash fired, auto mode',\r\n      0x001d: 'Flash fired, auto mode, return light not detected',\r\n      0x001f: 'Flash fired, auto mode, return light detected',\r\n      0x0020: 'No flash function',\r\n      0x0041: 'Flash fired, red-eye reduction mode',\r\n      0x0045: 'Flash fired, red-eye reduction mode, return light not detected',\r\n      0x0047: 'Flash fired, red-eye reduction mode, return light detected',\r\n      0x0049: 'Flash fired, compulsory flash mode, red-eye reduction mode',\r\n      0x004d: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected',\r\n      0x004f: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected',\r\n      0x0059: 'Flash fired, auto mode, red-eye reduction mode',\r\n      0x005d: 'Flash fired, auto mode, return light not detected, red-eye reduction mode',\r\n      0x005f: 'Flash fired, auto mode, return light detected, red-eye reduction mode'\r\n    },\r\n    SensingMethod: {\r\n      1: 'Not defined',\r\n      2: 'One-chip color area sensor',\r\n      3: 'Two-chip color area sensor',\r\n      4: 'Three-chip color area sensor',\r\n      5: 'Color sequential area sensor',\r\n      7: 'Trilinear sensor',\r\n      8: 'Color sequential linear sensor'\r\n    },\r\n    SceneCaptureType: {\r\n      0: 'Standard',\r\n      1: 'Landscape',\r\n      2: 'Portrait',\r\n      3: 'Night scene'\r\n    },\r\n    SceneType: {\r\n      1: 'Directly photographed'\r\n    },\r\n    CustomRendered: {\r\n      0: 'Normal process',\r\n      1: 'Custom process'\r\n    },\r\n    WhiteBalance: {\r\n      0: 'Auto white balance',\r\n      1: 'Manual white balance'\r\n    },\r\n    GainControl: {\r\n      0: 'None',\r\n      1: 'Low gain up',\r\n      2: 'High gain up',\r\n      3: 'Low gain down',\r\n      4: 'High gain down'\r\n    },\r\n    Contrast: {\r\n      0: 'Normal',\r\n      1: 'Soft',\r\n      2: 'Hard'\r\n    },\r\n    Saturation: {\r\n      0: 'Normal',\r\n      1: 'Low saturation',\r\n      2: 'High saturation'\r\n    },\r\n    Sharpness: {\r\n      0: 'Normal',\r\n      1: 'Soft',\r\n      2: 'Hard'\r\n    },\r\n    SubjectDistanceRange: {\r\n      0: 'Unknown',\r\n      1: 'Macro',\r\n      2: 'Close view',\r\n      3: 'Distant view'\r\n    },\r\n    FileSource: {\r\n      3: 'DSC'\r\n    },\r\n\r\n    Components: {\r\n      0: '',\r\n      1: 'Y',\r\n      2: 'Cb',\r\n      3: 'Cr',\r\n      4: 'R',\r\n      5: 'G',\r\n      6: 'B'\r\n    }\r\n  };\r\n\r\n  public addEvent(\r\n    element: EventTarget | any,\r\n    event: string,\r\n    handler: EventListener\r\n  ) {\r\n    if (element.addEventListener) {\r\n      element.addEventListener(event, handler, false);\r\n    } else {\r\n      // Hello, IE!\r\n      if (element.attachEvent) {\r\n        element.attachEvent('on' + event, handler);\r\n      }\r\n    }\r\n  }\r\n\r\n  public imageHasData(img: IImageExtended) {\r\n    return !!img.exifdata;\r\n  }\r\n\r\n  public base64ToArrayBuffer(base64: string): ArrayBuffer {\r\n    base64 = base64.replace(/^data:([^;]+);base64,/gim, '');\r\n    const binary: string = atob(base64);\r\n    const len: number = binary.length;\r\n    const buffer: ArrayBuffer = new ArrayBuffer(len);\r\n    const view: Uint8Array = new Uint8Array(buffer);\r\n    for (let i = 0; i < len; i++) {\r\n      view[i] = binary.charCodeAt(i);\r\n    }\r\n    return buffer;\r\n  }\r\n\r\n  public objectURLToBlob(url: string, callback: (blob: Blob) => void) {\r\n    const http: XMLHttpRequest = new XMLHttpRequest();\r\n    http.open('GET', url, true);\r\n    http.responseType = 'blob';\r\n    http.onload = () => {\r\n      if (http.status === 200 || http.status === 0) {\r\n        callback(http.response);\r\n      }\r\n    };\r\n    http.send();\r\n  }\r\n\r\n  public getImageData(\r\n    img: IImageExtended | Blob | File,\r\n    callback: (img: IImageExtended) => void\r\n  ) {\r\n    const handleBinaryFile = (binFile: ArrayBuffer) => {\r\n      const data = this.findEXIFinJPEG(binFile);\r\n      const iptcdata = this.findIPTCinJPEG(binFile);\r\n      (img as IImageExtended).exifdata = data || {};\r\n      (img as IImageExtended).iptcdata = iptcdata || {};\r\n      if (callback) {\r\n        callback.call(img);\r\n      }\r\n    };\r\n\r\n    if ('src' in img && (img as IImageExtended).src) {\r\n      if (/^data:/i.test((img as IImageExtended).src)) {\r\n        // Data URI\r\n        const arrayBuffer = this.base64ToArrayBuffer(\r\n          (img as IImageExtended).src\r\n        );\r\n        handleBinaryFile(arrayBuffer);\r\n      } else {\r\n        if (/^blob:/i.test((img as IImageExtended).src)) {\r\n          // Object URL\r\n          const fileReader = new FileReader();\r\n          fileReader.onload = (e: any) => {\r\n            handleBinaryFile(e.target.result);\r\n          };\r\n          this.objectURLToBlob((img as IImageExtended).src, (blob: Blob) => {\r\n            fileReader.readAsArrayBuffer(blob);\r\n          });\r\n        } else {\r\n          const http = new XMLHttpRequest();\r\n          http.onload = () => {\r\n            if (http.status === 200 || http.status === 0) {\r\n              handleBinaryFile(http.response);\r\n            } else {\r\n              throw new Error('Could not load image');\r\n            }\r\n          };\r\n          http.open('GET', (img as IImageExtended).src, true);\r\n          http.responseType = 'arraybuffer';\r\n          http.send(null);\r\n        }\r\n      }\r\n    } else {\r\n      if (FileReader && (img instanceof Blob || img instanceof File)) {\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = (e: any) => {\r\n          this.log('Got file of length ' + e.target.result.byteLength);\r\n          handleBinaryFile(e.target.result);\r\n        };\r\n\r\n        fileReader.readAsArrayBuffer(img);\r\n      }\r\n    }\r\n  }\r\n\r\n  public findEXIFinJPEG(file: ArrayBuffer) {\r\n    const dataView = new DataView(file);\r\n\r\n    this.log('Got file of length ' + file.byteLength);\r\n    if (dataView.getUint8(0) !== 0xff || dataView.getUint8(1) !== 0xd8) {\r\n      this.log('Not a valid JPEG');\r\n      return false; // not a valid jpeg\r\n    }\r\n\r\n    let offset = 2;\r\n    const length: number = file.byteLength;\r\n    let marker: number;\r\n\r\n    while (offset < length) {\r\n      if (dataView.getUint8(offset) !== 0xff) {\r\n        this.log(\r\n          'Not a valid marker at offset ' +\r\n            offset +\r\n            ', found: ' +\r\n            dataView.getUint8(offset)\r\n        );\r\n        return false; // not a valid marker, something is wrong\r\n      }\r\n\r\n      marker = dataView.getUint8(offset + 1);\r\n      this.log(marker);\r\n\r\n      // we could implement handling for other markers here,\r\n      // but we're only looking for 0xFFE1 for EXIF data\r\n      if (marker === 225) {\r\n        this.log('Found 0xFFE1 marker');\r\n        return this.readEXIFData(dataView, offset + 4); // , dataView.getUint16(offset + 2) - 2);\r\n        // offset += 2 + file.getShortAt(offset+2, true);\r\n      } else {\r\n        offset += 2 + dataView.getUint16(offset + 2);\r\n      }\r\n    }\r\n  }\r\n\r\n  public findIPTCinJPEG(file: ArrayBuffer) {\r\n    const dataView = new DataView(file);\r\n\r\n    this.log('Got file of length ' + file.byteLength);\r\n    if (dataView.getUint8(0) !== 0xff || dataView.getUint8(1) !== 0xd8) {\r\n      this.log('Not a valid JPEG');\r\n      return false; // not a valid jpeg\r\n    }\r\n\r\n    let offset = 2;\r\n    const length = file.byteLength;\r\n\r\n    // tslint:disable-next-line:variable-name\r\n    const isFieldSegmentStart = (_dataView: DataView, _offset: number) => {\r\n      return (\r\n        _dataView.getUint8(_offset) === 0x38 &&\r\n        _dataView.getUint8(_offset + 1) === 0x42 &&\r\n        _dataView.getUint8(_offset + 2) === 0x49 &&\r\n        _dataView.getUint8(_offset + 3) === 0x4d &&\r\n        _dataView.getUint8(_offset + 4) === 0x04 &&\r\n        _dataView.getUint8(_offset + 5) === 0x04\r\n      );\r\n    };\r\n\r\n    while (offset < length) {\r\n      if (isFieldSegmentStart(dataView, offset)) {\r\n        // Get the length of the name header (which is padded to an even number of bytes)\r\n        let nameHeaderLength = dataView.getUint8(offset + 7);\r\n        if (nameHeaderLength % 2 !== 0) {\r\n          nameHeaderLength += 1;\r\n        }\r\n        // Check for pre photoshop 6 format\r\n        if (nameHeaderLength === 0) {\r\n          // Always 4\r\n          nameHeaderLength = 4;\r\n        }\r\n\r\n        const startOffset = offset + 8 + nameHeaderLength;\r\n        const sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\r\n\r\n        return this.readIPTCData(file, startOffset, sectionLength);\r\n      }\r\n\r\n      // Not the marker, continue searching\r\n      offset++;\r\n    }\r\n  }\r\n\r\n  public readIPTCData(\r\n    file: ArrayBuffer,\r\n    startOffset: number,\r\n    sectionLength: number\r\n  ) {\r\n    const dataView = new DataView(file);\r\n    const data: any = {};\r\n    let fieldValue: any;\r\n    let fieldName: string;\r\n    let dataSize: number;\r\n    let segmentType: any;\r\n    let segmentSize: number;\r\n    let segmentStartPos = startOffset;\r\n    while (segmentStartPos < startOffset + sectionLength) {\r\n      if (\r\n        dataView.getUint8(segmentStartPos) === 0x1c &&\r\n        dataView.getUint8(segmentStartPos + 1) === 0x02\r\n      ) {\r\n        segmentType = dataView.getUint8(segmentStartPos + 2);\r\n        if (segmentType in this.IptcFieldMap) {\r\n          dataSize = dataView.getInt16(segmentStartPos + 3);\r\n          segmentSize = dataSize + 5;\r\n          fieldName = this.IptcFieldMap[segmentType];\r\n          fieldValue = this.getStringFromDB(\r\n            dataView,\r\n            segmentStartPos + 5,\r\n            dataSize\r\n          );\r\n          // Check if we already stored a value with this name\r\n          if (data.hasOwnProperty(fieldName)) {\r\n            // Value already stored with this name, create multivalue field\r\n            if (data[fieldName] instanceof Array) {\r\n              data[fieldName].push(fieldValue);\r\n            } else {\r\n              data[fieldName] = [data[fieldName], fieldValue];\r\n            }\r\n          } else {\r\n            data[fieldName] = fieldValue;\r\n          }\r\n        }\r\n      }\r\n      segmentStartPos++;\r\n    }\r\n    return data;\r\n  }\r\n\r\n  public readTags(\r\n    file: DataView,\r\n    tiffStart: number,\r\n    dirStart: number,\r\n    strings: string[],\r\n    bigEnd: boolean\r\n  ): any {\r\n    const entries: number = file.getUint16(dirStart, !bigEnd);\r\n    const tags: any = {};\r\n    let entryOffset: number;\r\n    let tag: string;\r\n\r\n    for (let i = 0; i < entries; i++) {\r\n      entryOffset = dirStart + i * 12 + 2;\r\n      tag = strings[file.getUint16(entryOffset, !bigEnd)];\r\n      if (!tag) {\r\n        this.log('Unknown tag: ' + file.getUint16(entryOffset, !bigEnd));\r\n      }\r\n      tags[tag] = this.readTagValue(\r\n        file,\r\n        entryOffset,\r\n        tiffStart,\r\n        dirStart,\r\n        bigEnd\r\n      );\r\n    }\r\n    return tags;\r\n  }\r\n\r\n  public readTagValue(\r\n    file: any,\r\n    entryOffset: number,\r\n    tiffStart: number,\r\n    dirStart: number,\r\n    bigEnd: boolean\r\n  ): any {\r\n    const type: number = file.getUint16(entryOffset + 2, !bigEnd);\r\n    const numValues = file.getUint32(entryOffset + 4, !bigEnd);\r\n    const valueOffset = file.getUint32(entryOffset + 8, !bigEnd) + tiffStart;\r\n    let offset: number;\r\n    let vals: any[];\r\n    let val: any;\r\n    let n: number;\r\n    let numerator: any;\r\n    let denominator: any;\r\n\r\n    switch (type) {\r\n      case 1: // byte, 8-bit unsigned int\r\n      case 7: // undefined, 8-bit byte, value depending on field\r\n        if (numValues === 1) {\r\n          return file.getUint8(entryOffset + 8, !bigEnd);\r\n        } else {\r\n          offset = numValues > 4 ? valueOffset : entryOffset + 8;\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] = file.getUint8(offset + n);\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 2: // ascii, 8-bit byte\r\n        offset = numValues > 4 ? valueOffset : entryOffset + 8;\r\n        return this.getStringFromDB(file, offset, numValues - 1);\r\n\r\n      case 3: // short, 16 bit int\r\n        if (numValues === 1) {\r\n          return file.getUint16(entryOffset + 8, !bigEnd);\r\n        } else {\r\n          offset = numValues > 2 ? valueOffset : entryOffset + 8;\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] = file.getUint16(offset + 2 * n, !bigEnd);\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 4: // long, 32 bit int\r\n        if (numValues === 1) {\r\n          return file.getUint32(entryOffset + 8, !bigEnd);\r\n        } else {\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] = file.getUint32(valueOffset + 4 * n, !bigEnd);\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 5: // rational = two long values, first is numerator, second is denominator\r\n        if (numValues === 1) {\r\n          numerator = file.getUint32(valueOffset, !bigEnd);\r\n          denominator = file.getUint32(valueOffset + 4, !bigEnd);\r\n          val = new Fraction(numerator / denominator);\r\n          val.numerator = numerator;\r\n          val.denominator = denominator;\r\n          return val;\r\n        } else {\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            numerator = file.getUint32(valueOffset + 8 * n, !bigEnd);\r\n            denominator = file.getUint32(valueOffset + 4 + 8 * n, !bigEnd);\r\n            vals[n] = new Fraction(numerator / denominator);\r\n            vals[n].numerator = numerator;\r\n            vals[n].denominator = denominator;\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 9: // slong, 32 bit signed int\r\n        if (numValues === 1) {\r\n          return file.getInt32(entryOffset + 8, !bigEnd);\r\n        } else {\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] = file.getInt32(valueOffset + 4 * n, !bigEnd);\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 10: // signed rational, two slongs, first is numerator, second is denominator\r\n        if (numValues === 1) {\r\n          return (\r\n            file.getInt32(valueOffset, !bigEnd) /\r\n            file.getInt32(valueOffset + 4, !bigEnd)\r\n          );\r\n        } else {\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] =\r\n              file.getInt32(valueOffset + 8 * n, !bigEnd) /\r\n              file.getInt32(valueOffset + 4 + 8 * n, !bigEnd);\r\n          }\r\n          return vals;\r\n        }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  public getStringFromDB(\r\n    buffer: DataView,\r\n    start: number,\r\n    length: number\r\n  ): string {\r\n    let outstr = '';\r\n    for (let n = start; n < start + length; n++) {\r\n      outstr += String.fromCharCode(buffer.getUint8(n));\r\n    }\r\n    return outstr;\r\n  }\r\n\r\n  public readEXIFData(file: DataView, start: number): any {\r\n    if (this.getStringFromDB(file, start, 4) !== 'Exif') {\r\n      this.log('Not valid EXIF data! ' + this.getStringFromDB(file, start, 4));\r\n\r\n      return false;\r\n    }\r\n\r\n    let bigEnd: boolean;\r\n    let tags: any;\r\n    let tag: string;\r\n    let exifData: any;\r\n    let gpsData: any;\r\n    const tiffOffset: number = start + 6;\r\n\r\n    // test for TIFF validity and endianness\r\n    if (file.getUint16(tiffOffset) === 0x4949) {\r\n      bigEnd = false;\r\n    } else {\r\n      if (file.getUint16(tiffOffset) === 0x4d4d) {\r\n        bigEnd = true;\r\n      } else {\r\n        this.log('Not valid TIFF data! (no 0x4949 or 0x4D4D)');\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (file.getUint16(tiffOffset + 2, !bigEnd) !== 0x002a) {\r\n      this.log('Not valid TIFF data! (no 0x002A)');\r\n      return false;\r\n    }\r\n\r\n    const firstIFDOffset = file.getUint32(tiffOffset + 4, !bigEnd);\r\n\r\n    if (firstIFDOffset < 0x00000008) {\r\n      this.log(\r\n        'Not valid TIFF data! (First offset less than 8)',\r\n        file.getUint32(tiffOffset + 4, !bigEnd)\r\n      );\r\n      return false;\r\n    }\r\n\r\n    tags = this.readTags(\r\n      file,\r\n      tiffOffset,\r\n      tiffOffset + firstIFDOffset,\r\n      this.TiffTags,\r\n      bigEnd\r\n    );\r\n\r\n    if (tags.ExifIFDPointer) {\r\n      exifData = this.readTags(\r\n        file,\r\n        tiffOffset,\r\n        tiffOffset + tags.ExifIFDPointer,\r\n        this.Tags,\r\n        bigEnd\r\n      );\r\n      for (tag in exifData) {\r\n        if ({}.hasOwnProperty.call(exifData, tag)) {\r\n          switch (tag) {\r\n            case 'LightSource':\r\n            case 'Flash':\r\n            case 'MeteringMode':\r\n            case 'ExposureProgram':\r\n            case 'SensingMethod':\r\n            case 'SceneCaptureType':\r\n            case 'SceneType':\r\n            case 'CustomRendered':\r\n            case 'WhiteBalance':\r\n            case 'GainControl':\r\n            case 'Contrast':\r\n            case 'Saturation':\r\n            case 'Sharpness':\r\n            case 'SubjectDistanceRange':\r\n            case 'FileSource':\r\n              exifData[tag] = this.StringValues[tag][exifData[tag]];\r\n              break;\r\n            case 'ExifVersion':\r\n            case 'FlashpixVersion':\r\n              exifData[tag] = String.fromCharCode(\r\n                exifData[tag][0],\r\n                exifData[tag][1],\r\n                exifData[tag][2],\r\n                exifData[tag][3]\r\n              );\r\n              break;\r\n            case 'ComponentsConfiguration':\r\n              const compopents = 'Components';\r\n              exifData[tag] =\r\n                this.StringValues[compopents][exifData[tag][0]] +\r\n                this.StringValues[compopents][exifData[tag][1]] +\r\n                this.StringValues[compopents][exifData[tag][2]] +\r\n                this.StringValues[compopents][exifData[tag][3]];\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          tags[tag] = exifData[tag];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (tags.GPSInfoIFDPointer) {\r\n      gpsData = this.readTags(\r\n        file,\r\n        tiffOffset,\r\n        tiffOffset + tags.GPSInfoIFDPointer,\r\n        this.GPSTags,\r\n        bigEnd\r\n      );\r\n      for (tag in gpsData) {\r\n        if ({}.hasOwnProperty.call(gpsData, tag)) {\r\n          switch (tag) {\r\n            case 'GPSVersionID':\r\n              gpsData[tag] =\r\n                gpsData[tag][0] +\r\n                '.' +\r\n                gpsData[tag][1] +\r\n                '.' +\r\n                gpsData[tag][2] +\r\n                '.' +\r\n                gpsData[tag][3];\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          tags[tag] = gpsData[tag];\r\n        }\r\n      }\r\n    }\r\n\r\n    return tags;\r\n  }\r\n\r\n  //   get rid of this silly issue\r\n  private checkImageType(img: any) {\r\n    return img instanceof Image || img instanceof HTMLImageElement;\r\n  }\r\n\r\n  public getData(img: IImageExtended | HTMLImageElement, callback: () => void) {\r\n    if (this.checkImageType(img) && !img.complete) {\r\n      return false;\r\n    }\r\n\r\n    if (!this.imageHasData(img as IImageExtended)) {\r\n      this.getImageData(img as IImageExtended, callback);\r\n    } else {\r\n      if (callback) {\r\n        callback.call(img);\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public getTag(img: any, tag: string) {\r\n    if (!this.imageHasData(img)) {\r\n      return;\r\n    }\r\n    return img.exifdata[tag];\r\n  }\r\n\r\n  public getAllTags(img: any) {\r\n    if (!this.imageHasData(img)) {\r\n      return {};\r\n    }\r\n    let a: string;\r\n    const data: any = img.exifdata;\r\n    const tags: any = {};\r\n    for (a in data) {\r\n      if (data.hasOwnProperty(a)) {\r\n        tags[a] = data[a];\r\n      }\r\n    }\r\n    return tags;\r\n  }\r\n\r\n  public pretty(img: IImageExtended) {\r\n    if (!this.imageHasData(img)) {\r\n      return '';\r\n    }\r\n    let a: any;\r\n    const data: any = img.exifdata;\r\n    let strPretty = '';\r\n    for (a in data) {\r\n      if (data.hasOwnProperty(a)) {\r\n        if (typeof data[a] === 'object') {\r\n          if (data[a] instanceof Number) {\r\n            strPretty += `${a} : ${data[a]} [${data[a].numerator}/${\r\n              data[a].denominator\r\n            }]\\r\\n`;\r\n          } else {\r\n            strPretty += `${a} : [${data[a].length} values]\\r\\n`;\r\n          }\r\n        } else {\r\n          strPretty += `${a} : ${data[a]}\\r\\n`;\r\n        }\r\n      }\r\n    }\r\n    return strPretty;\r\n  }\r\n\r\n  public readFromBinaryFile(file: ArrayBuffer) {\r\n    return this.findEXIFinJPEG(file);\r\n  }\r\n\r\n  public log(...args: any[]) {\r\n    if (this.debug) {\r\n      console.log(args);\r\n    }\r\n  }\r\n}\r\n","export interface IPoint {\r\n  x: number;\r\n  y: number;\r\n  next: Point;\r\n  prev: Point;\r\n}\r\n\r\nexport class Point implements IPoint {\r\n  public x: number;\r\n  public y: number;\r\n\r\n  private myNext: Point;\r\n  private myPrev: Point;\r\n\r\n  constructor(x: number = 0, y: number = 0) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  public get next(): Point {\r\n    return this.myNext;\r\n  }\r\n\r\n  public set next(p: Point) {\r\n    this.myNext = p;\r\n  }\r\n\r\n  public get prev(): Point {\r\n    return this.myPrev;\r\n  }\r\n\r\n  public set prev(p: Point) {\r\n    this.myPrev = p;\r\n  }\r\n}\r\n","import { Point } from './point';\r\n\r\nexport class PointPool {\r\n  private borrowed: number;\r\n  private firstAvailable: Point;\r\n\r\n  constructor(initialSize: number = 1) {\r\n    let prev: Point = (this.firstAvailable = new Point());\r\n\r\n    for (let i = 1; i < initialSize; i++) {\r\n      const p = new Point();\r\n      prev.next = p;\r\n      prev = p;\r\n    }\r\n  }\r\n\r\n  get instance(): PointPool {\r\n    return this;\r\n  }\r\n\r\n  public borrow(x: number, y: number): Point {\r\n    if (this.firstAvailable == null) {\r\n      throw new Error('Pool exhausted');\r\n    }\r\n    this.borrowed++;\r\n    const p: Point = this.firstAvailable;\r\n    this.firstAvailable = p.next;\r\n    p.x = x;\r\n    p.y = y;\r\n    return p;\r\n  }\r\n\r\n  public returnPoint(p: Point) {\r\n    this.borrowed--;\r\n    p.x = 0;\r\n    p.y = 0;\r\n    p.next = this.firstAvailable;\r\n    this.firstAvailable = p;\r\n  }\r\n}\r\n","import { Point } from './point';\r\nimport { PointPool } from './pointPool';\r\n\r\nexport class Bounds {\r\n  public left: number;\r\n  public right: number;\r\n  public top: number;\r\n  public bottom: number;\r\n\r\n  constructor(x?: number, y?: number, width?: number, height?: number) {\r\n    if (x === void 0) {\r\n      x = 0;\r\n    }\r\n    if (y === void 0) {\r\n      y = 0;\r\n    }\r\n    if (width === void 0) {\r\n      width = 0;\r\n    }\r\n    if (height === void 0) {\r\n      height = 0;\r\n    }\r\n    this.left = x;\r\n    this.right = x + width;\r\n    this.top = y;\r\n    this.bottom = y + height;\r\n  }\r\n\r\n  public get width(): number {\r\n    return this.right - this.left;\r\n  }\r\n\r\n  public get height(): number {\r\n    return this.bottom - this.top;\r\n  }\r\n\r\n  public getCentre(): Point {\r\n    const w = this.width;\r\n    const h = this.height;\r\n    return new PointPool().instance.borrow(this.left + w / 2, this.top + h / 2);\r\n  }\r\n}\r\n","import { Point } from './point';\r\nimport { CropperSettings } from '../cropper-settings';\r\n\r\nexport interface IHandle {\r\n  over: boolean;\r\n  drag: boolean;\r\n  position: Point;\r\n  offset: Point;\r\n  radius: number;\r\n  cropperSettings: CropperSettings;\r\n  setPosition(x: number, y: number): void;\r\n  setDrag(value: boolean): void;\r\n  draw(ctx: CanvasRenderingContext2D): void;\r\n  setOver(over: boolean): void;\r\n  touchInBounds(x: number, y: number): boolean;\r\n}\r\n\r\nexport class Handle implements IHandle {\r\n  public over: boolean;\r\n  public drag: boolean;\r\n  // tslint:disable-next-line:variable-name\r\n  private _position: Point;\r\n  public offset: Point;\r\n  public radius: number;\r\n\r\n  public cropperSettings: CropperSettings = new CropperSettings();\r\n\r\n  constructor(x: number, y: number, radius: number, settings: CropperSettings) {\r\n    this.over = false;\r\n    this.drag = false;\r\n    this._position = new Point(x, y);\r\n    this.offset = new Point(0, 0);\r\n    this.radius = radius;\r\n    this.cropperSettings = settings;\r\n  }\r\n\r\n  public setDrag(value: boolean): void {\r\n    this.drag = value;\r\n    this.setOver(value);\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D) {\r\n    // this should't be empty\r\n  }\r\n\r\n  public setOver(over: boolean): void {\r\n    this.over = over;\r\n  }\r\n\r\n  public touchInBounds(x: number, y: number): boolean {\r\n    return (\r\n      x > this.position.x - this.radius + this.offset.x &&\r\n      x < this.position.x + this.radius + this.offset.x &&\r\n      y > this.position.y - this.radius + this.offset.y &&\r\n      y < this.position.y + this.radius + this.offset.y\r\n    );\r\n  }\r\n\r\n  public get position(): Point {\r\n    return this._position;\r\n  }\r\n\r\n  public setPosition(x: number, y: number) {\r\n    this._position.x = x;\r\n    this._position.y = y;\r\n  }\r\n}\r\n","import { Handle, IHandle } from './handle';\r\nimport { CropperSettings } from '../cropper-settings';\r\n\r\nexport interface ICornerMarker extends IHandle {\r\n  horizontalNeighbour: CornerMarker;\r\n  verticalNeighbour: CornerMarker;\r\n}\r\n\r\nexport class CornerMarker extends Handle implements ICornerMarker {\r\n  public horizontalNeighbour: CornerMarker;\r\n  public verticalNeighbour: CornerMarker;\r\n\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    radius: number,\r\n    cropperSettings: CropperSettings\r\n  ) {\r\n    super(x, y, radius, cropperSettings);\r\n  }\r\n\r\n  public drawCornerBorder(ctx: CanvasRenderingContext2D): void {\r\n    let sideLength = 10;\r\n    if (this.over || this.drag) {\r\n      sideLength = 12;\r\n    }\r\n\r\n    let hDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    let vDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    if (this.horizontalNeighbour.position.x < this.position.x) {\r\n      hDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n    if (this.verticalNeighbour.position.y < this.position.y) {\r\n      vDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n\r\n    ctx.beginPath();\r\n    if (this.cropperSettings.cropperDrawSettings.lineDash) {\r\n      ctx.setLineDash([1, 3]);\r\n    }\r\n    ctx.lineJoin = 'miter';\r\n    ctx.moveTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.closePath();\r\n    ctx.lineWidth = this.cropperSettings.cropperDrawSettings.strokeWidth;\r\n    ctx.strokeStyle =\r\n      this.cropperSettings.cropperDrawSettings.strokeColor ||\r\n      'rgba(255,255,255,.7)';\r\n    ctx.stroke();\r\n  }\r\n\r\n  public drawCornerFill(ctx: CanvasRenderingContext2D): void {\r\n    let sideLength = 10;\r\n    if (this.over || this.drag) {\r\n      sideLength = 12;\r\n    }\r\n    let hDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    let vDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    if (this.horizontalNeighbour.position.x < this.position.x) {\r\n      hDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n    if (this.verticalNeighbour.position.y < this.position.y) {\r\n      vDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n\r\n    if (this.cropperSettings.rounded) {\r\n      const width: number =\r\n        this.position.x - this.horizontalNeighbour.position.x;\r\n      const height: number =\r\n        this.position.y - this.verticalNeighbour.position.y;\r\n\r\n      const offX: number =\r\n        Math.round(Math.sin(Math.PI / 2) * Math.abs(width / 2)) / 4;\r\n      const offY: number =\r\n        Math.round(Math.sin(Math.PI / 2) * Math.abs(height / 2)) / 4;\r\n\r\n      this.offset.x = hDirection > 0 ? offX : -offX;\r\n      this.offset.y = vDirection > 0 ? offY : -offY;\r\n    } else {\r\n      this.offset.x = 0;\r\n      this.offset.y = 0;\r\n    }\r\n\r\n    ctx.beginPath();\r\n    if (this.cropperSettings.cropperDrawSettings.lineDash) {\r\n      ctx.setLineDash([1, 3]);\r\n    }\r\n    ctx.moveTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.closePath();\r\n    ctx.fillStyle =\r\n      this.cropperSettings.cropperDrawSettings.fillColor ||\r\n      'rgba(255,255,255,.7)';\r\n    ctx.fill();\r\n  }\r\n\r\n  public moveX(x: number): void {\r\n    this.setPosition(x, this.position.y);\r\n  }\r\n\r\n  public moveY(y: number): void {\r\n    this.setPosition(this.position.x, y);\r\n  }\r\n\r\n  public move(x: number, y: number): void {\r\n    this.setPosition(x, y);\r\n    this.verticalNeighbour.moveX(x);\r\n    this.horizontalNeighbour.moveY(y);\r\n  }\r\n\r\n  public addHorizontalNeighbour(neighbour: CornerMarker): void {\r\n    this.horizontalNeighbour = neighbour;\r\n  }\r\n\r\n  public addVerticalNeighbour(neighbour: CornerMarker): void {\r\n    this.verticalNeighbour = neighbour;\r\n  }\r\n\r\n  public getHorizontalNeighbour(): CornerMarker {\r\n    return this.horizontalNeighbour;\r\n  }\r\n\r\n  public getVerticalNeighbour(): CornerMarker {\r\n    return this.verticalNeighbour;\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D): void {\r\n    this.drawCornerFill(ctx);\r\n    this.drawCornerBorder(ctx);\r\n  }\r\n}\r\n","import { IHandle } from './handle';\r\n\r\nexport class CropTouch {\r\n  public x: number;\r\n  public y: number;\r\n  public id: number;\r\n\r\n  public dragHandle: IHandle;\r\n\r\n  constructor(x: number = 0, y: number = 0, id: number = 0) {\r\n    this.id = id;\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n","import { Handle } from './handle';\r\nimport { PointPool } from './pointPool';\r\nimport { Point } from './point';\r\nimport { CropperSettings } from '../cropper-settings';\r\nimport { Bounds } from './bounds';\r\n\r\nexport class DragMarker extends Handle {\r\n  private iconPoints: Array<Point>;\r\n  private scaledIconPoints: Array<Point>;\r\n\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    radius: number,\r\n    cropperSettings: CropperSettings\r\n  ) {\r\n    super(x, y, radius, cropperSettings);\r\n    this.iconPoints = [];\r\n    this.scaledIconPoints = [];\r\n    this.getDragIconPoints(this.iconPoints, 1);\r\n    this.getDragIconPoints(this.scaledIconPoints, 1.2);\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D) {\r\n    if (this.over || this.drag) {\r\n      this.drawIcon(ctx, this.scaledIconPoints);\r\n    } else {\r\n      this.drawIcon(ctx, this.iconPoints);\r\n    }\r\n  }\r\n\r\n  public getDragIconPoints(arr: Array<any>, scale: number) {\r\n    const maxLength = 17 * scale;\r\n    const arrowWidth = 14 * scale;\r\n    const arrowLength = 8 * scale;\r\n    const connectorThroat = 4 * scale;\r\n\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -connectorThroat / 2,\r\n        maxLength - arrowLength\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(-arrowWidth / 2, maxLength - arrowLength)\r\n    );\r\n    arr.push(new PointPool().instance.borrow(0, maxLength));\r\n    arr.push(\r\n      new PointPool().instance.borrow(arrowWidth / 2, maxLength - arrowLength)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        connectorThroat / 2,\r\n        maxLength - arrowLength\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(connectorThroat / 2, connectorThroat / 2)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        maxLength - arrowLength,\r\n        connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(maxLength - arrowLength, arrowWidth / 2)\r\n    );\r\n    arr.push(new PointPool().instance.borrow(maxLength, 0));\r\n    arr.push(\r\n      new PointPool().instance.borrow(maxLength - arrowLength, -arrowWidth / 2)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        maxLength - arrowLength,\r\n        -connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(connectorThroat / 2, -connectorThroat / 2)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        connectorThroat / 2,\r\n        -maxLength + arrowLength\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(arrowWidth / 2, -maxLength + arrowLength)\r\n    );\r\n    arr.push(new PointPool().instance.borrow(0, -maxLength));\r\n    arr.push(\r\n      new PointPool().instance.borrow(-arrowWidth / 2, -maxLength + arrowLength)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -connectorThroat / 2,\r\n        -maxLength + arrowLength\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -connectorThroat / 2,\r\n        -connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -maxLength + arrowLength,\r\n        -connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(-maxLength + arrowLength, -arrowWidth / 2)\r\n    );\r\n    arr.push(new PointPool().instance.borrow(-maxLength, 0));\r\n    arr.push(\r\n      new PointPool().instance.borrow(-maxLength + arrowLength, arrowWidth / 2)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -maxLength + arrowLength,\r\n        connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(-connectorThroat / 2, connectorThroat / 2)\r\n    );\r\n  }\r\n\r\n  public drawIcon(ctx: CanvasRenderingContext2D, points: Array<Point>) {\r\n    if (this.cropperSettings.showCenterMarker) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(points[0].x + this.position.x, points[0].y + this.position.y);\r\n      for (const p of points) {\r\n        ctx.lineTo(p.x + this.position.x, p.y + this.position.y);\r\n      }\r\n      ctx.closePath();\r\n      ctx.fillStyle = this.cropperSettings.cropperDrawSettings.dragIconFillColor;\r\n      ctx.fill();\r\n      ctx.lineWidth = this.cropperSettings.cropperDrawSettings.dragIconStrokeWidth;\r\n      ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.dragIconStrokeColor;\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  public recalculatePosition(bounds: Bounds) {\r\n    const c = bounds.getCentre();\r\n    this.setPosition(c.x, c.y);\r\n    new PointPool().instance.returnPoint(c);\r\n  }\r\n}\r\n","import { PointPool } from './pointPool';\r\nimport { CornerMarker } from './cornerMarker';\r\nimport { DragMarker } from './dragMarker';\r\nimport { CropTouch } from './cropTouch';\r\n\r\nexport class ImageCropperModel {\r\n  public isMouseDown: boolean;\r\n  protected canvas: HTMLCanvasElement;\r\n  protected x: number;\r\n  protected y: number;\r\n  protected width: number;\r\n  protected height: number;\r\n  protected canvasWidth: number;\r\n  protected canvasHeight: number;\r\n  protected keepAspect: boolean;\r\n  protected touchRadius: number;\r\n  protected currentDragTouches: Array<CropTouch>;\r\n  protected ratioW: number;\r\n  protected ratioH: number;\r\n  protected fileType: string;\r\n  protected imageSet: boolean;\r\n  protected pointPool: PointPool;\r\n  protected buffer: HTMLCanvasElement;\r\n  protected cropCanvas: HTMLCanvasElement;\r\n  protected tl: CornerMarker;\r\n  protected tr: CornerMarker;\r\n  protected bl: CornerMarker;\r\n  protected br: CornerMarker;\r\n  protected markers: Array<CornerMarker>;\r\n  protected center: DragMarker;\r\n  protected ctx: CanvasRenderingContext2D;\r\n  protected aspectRatio: number;\r\n  protected currentlyInteracting: boolean;\r\n  protected srcImage: HTMLImageElement;\r\n  protected vertSquashRatio: number;\r\n  protected minXClamp: number;\r\n  protected minYClamp: number;\r\n  protected maxXClamp: number;\r\n  protected maxYClamp: number;\r\n  protected minHeight: number;\r\n  protected minWidth: number;\r\n  protected cropWidth: number;\r\n  protected cropHeight: number;\r\n  protected croppedImage: HTMLImageElement;\r\n}\r\n","export class ImageCropperDataShare {\r\n  public share: any = {};\r\n  public pressed: HTMLCanvasElement;\r\n  public over: HTMLCanvasElement;\r\n\r\n  public setPressed(canvas: HTMLCanvasElement): void {\r\n    this.pressed = canvas;\r\n  }\r\n\r\n  public setReleased(canvas: HTMLCanvasElement): void {\r\n    if (canvas === this.pressed) {\r\n      //  this.pressed = undefined;\r\n    }\r\n  }\r\n\r\n  public setOver(canvas: HTMLCanvasElement): void {\r\n    this.over = canvas;\r\n  }\r\n\r\n  public setStyle(canvas: HTMLCanvasElement, style: any): void {\r\n    if (this.pressed !== undefined) {\r\n      if (this.pressed === canvas) {\r\n        // TODO: check this\r\n        // angular.element(document.documentElement).css('cursor', style);\r\n      }\r\n    } else {\r\n      if (canvas === this.over) {\r\n        // TODO: check this\r\n        // angular.element(document.documentElement).css('cursor', style);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Bounds } from './model/bounds';\r\nimport { CornerMarker } from './model/cornerMarker';\r\nimport { CropTouch } from './model/cropTouch';\r\nimport { CropperSettings } from './cropper-settings';\r\nimport { DragMarker } from './model/dragMarker';\r\nimport { ImageCropperModel } from './model/imageCropperModel';\r\nimport { ImageCropperDataShare } from './imageCropperDataShare';\r\nimport { PointPool } from './model/pointPool';\r\nimport { Point } from './model/point';\r\nimport { ICornerMarker } from './model/cornerMarker';\r\n\r\nexport class ImageCropper extends ImageCropperModel {\r\n  private crop: ImageCropper;\r\n  private cropperSettings: CropperSettings;\r\n  private previousDistance: number;\r\n  private imageCropperDataShare: ImageCropperDataShare;\r\n\r\n  constructor(cropperSettings: CropperSettings) {\r\n    super();\r\n    this.imageCropperDataShare = new ImageCropperDataShare();\r\n    const x = 0;\r\n    const y = 0;\r\n    const width: number = cropperSettings.width;\r\n    const height: number = cropperSettings.height;\r\n    const keepAspect: boolean = cropperSettings.keepAspect;\r\n    const touchRadius: number = cropperSettings.touchRadius;\r\n    const centerTouchRadius: number = cropperSettings.centerTouchRadius;\r\n    const minWidth: number = cropperSettings.minWidth;\r\n    const minHeight: number = cropperSettings.minHeight;\r\n    const croppedWidth: number = cropperSettings.croppedWidth;\r\n    const croppedHeight: number = cropperSettings.croppedHeight;\r\n\r\n    this.cropperSettings = cropperSettings;\r\n\r\n    this.crop = this;\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    this.canvasHeight = cropperSettings.canvasHeight;\r\n    this.canvasWidth = cropperSettings.canvasWidth;\r\n\r\n    this.width = width;\r\n    if (width === void 0) {\r\n      this.width = 100;\r\n    }\r\n    this.height = height;\r\n    if (height === void 0) {\r\n      this.height = 50;\r\n    }\r\n    this.keepAspect = keepAspect;\r\n    if (keepAspect === void 0) {\r\n      this.keepAspect = true;\r\n    }\r\n    this.touchRadius = touchRadius;\r\n    if (touchRadius === void 0) {\r\n      this.touchRadius = 20;\r\n    }\r\n    this.minWidth = minWidth;\r\n    this.minHeight = minHeight;\r\n    this.aspectRatio = 0;\r\n    this.currentDragTouches = [];\r\n    this.isMouseDown = false;\r\n    this.ratioW = 1;\r\n    this.ratioH = 1;\r\n    this.fileType = cropperSettings.fileType;\r\n    this.imageSet = false;\r\n    this.pointPool = new PointPool(200);\r\n\r\n    this.tl = new CornerMarker(x, y, touchRadius, this.cropperSettings);\r\n    this.tr = new CornerMarker(x + width, y, touchRadius, this.cropperSettings);\r\n    this.bl = new CornerMarker(\r\n      x,\r\n      y + height,\r\n      touchRadius,\r\n      this.cropperSettings\r\n    );\r\n    this.br = new CornerMarker(\r\n      x + width,\r\n      y + height,\r\n      touchRadius,\r\n      this.cropperSettings\r\n    );\r\n\r\n    this.tl.addHorizontalNeighbour(this.tr);\r\n    this.tl.addVerticalNeighbour(this.bl);\r\n    this.tr.addHorizontalNeighbour(this.tl);\r\n    this.tr.addVerticalNeighbour(this.br);\r\n    this.bl.addHorizontalNeighbour(this.br);\r\n    this.bl.addVerticalNeighbour(this.tl);\r\n    this.br.addHorizontalNeighbour(this.bl);\r\n    this.br.addVerticalNeighbour(this.tr);\r\n    this.markers = [this.tl, this.tr, this.bl, this.br];\r\n\r\n    this.center = new DragMarker(\r\n      x + width / 2,\r\n      y + height / 2,\r\n      centerTouchRadius,\r\n      this.cropperSettings\r\n    );\r\n    this.aspectRatio = height / width;\r\n    this.croppedImage = new Image();\r\n    this.currentlyInteracting = false;\r\n    this.cropWidth = croppedWidth;\r\n    this.cropHeight = croppedHeight;\r\n  }\r\n\r\n  private sign(x: number): number {\r\n    if (+x === x) {\r\n      return x === 0 ? x : x > 0 ? 1 : -1;\r\n    }\r\n    return NaN;\r\n  }\r\n\r\n  private getMousePos(canvas: HTMLCanvasElement, evt: MouseEvent): Point {\r\n    const rect = canvas.getBoundingClientRect();\r\n    return new PointPool().instance.borrow(\r\n      evt.clientX - rect.left,\r\n      evt.clientY - rect.top\r\n    );\r\n  }\r\n\r\n  private getTouchPos(canvas: HTMLCanvasElement, touch: Touch): Point {\r\n    const rect = canvas.getBoundingClientRect();\r\n    return new PointPool().instance.borrow(\r\n      touch.clientX - rect.left,\r\n      touch.clientY - rect.top\r\n    );\r\n  }\r\n\r\n  private detectVerticalSquash(\r\n    img: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\r\n  ) {\r\n    const ih = img.height;\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 1;\r\n    canvas.height = ih;\r\n    const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    ctx.drawImage(img, 0, 0);\r\n    const imageData: any = ctx.getImageData(0, 0, 1, ih);\r\n    if (imageData) {\r\n      const data = imageData.data;\r\n      // search image edge pixel position in case it is squashed vertically.\r\n      let sy = 0;\r\n      let ey = ih;\r\n      let py = ih;\r\n      while (py > sy) {\r\n        const alpha = data[(py - 1) * 4 + 3];\r\n        if (alpha === 0) {\r\n          ey = py;\r\n        } else {\r\n          sy = py;\r\n        }\r\n        // tslint:disable-next-line:no-bitwise\r\n        py = (ey + sy) >> 1;\r\n      }\r\n      const ratio = py / ih;\r\n      return ratio === 0 ? 1 : ratio;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  private getDataUriMimeType(dataUri: string) {\r\n    // Get a substring because the regex does not perform well on very large strings.\r\n    // Cater for optional charset. Length 50 shoould be enough.\r\n    const dataUriSubstring = dataUri.substring(0, 50);\r\n    let mimeType = 'image/png';\r\n    // data-uri scheme\r\n    // data:[<media type>][;charset=<character set>][;base64],<data>\r\n    const regEx = RegExp(\r\n      /^(data:)([\\w\\/\\+]+);(charset=[\\w-]+|base64).*,(.*)/gi\r\n    );\r\n    const matches = regEx.exec(dataUriSubstring);\r\n    if (matches && matches[2]) {\r\n      mimeType = matches[2];\r\n      if (mimeType === 'image/jpg') {\r\n        mimeType = 'image/jpeg';\r\n      }\r\n    }\r\n    return mimeType;\r\n  }\r\n\r\n  public prepare(canvas: HTMLCanvasElement) {\r\n    this.buffer = document.createElement('canvas');\r\n    this.cropCanvas = document.createElement('canvas');\r\n\r\n    // todo get more reliable parent width value.\r\n    const responsiveWidth: number = canvas.parentElement\r\n      ? canvas.parentElement.clientWidth\r\n      : 0;\r\n    if (responsiveWidth > 0 && this.cropperSettings.dynamicSizing) {\r\n      this.cropCanvas.width = responsiveWidth;\r\n      this.buffer.width = responsiveWidth;\r\n      canvas.width = responsiveWidth;\r\n    } else {\r\n      this.cropCanvas.width = this.cropWidth;\r\n      this.buffer.width = canvas.width;\r\n    }\r\n\r\n    this.cropCanvas.height = this.cropHeight;\r\n    this.buffer.height = canvas.height;\r\n    this.canvas = canvas;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.draw(this.ctx);\r\n  }\r\n\r\n  public updateSettings(cropperSettings: CropperSettings) {\r\n    this.cropperSettings = cropperSettings;\r\n  }\r\n\r\n  public resizeCanvas(\r\n    width: number,\r\n    height: number,\r\n    setImage: boolean = false\r\n  ): void {\r\n    this.canvas.width = this.cropCanvas.width = this.width = this.canvasWidth = this.buffer.width = width;\r\n    this.canvas.height = this.cropCanvas.height = this.height = this.canvasHeight = this.buffer.height = height;\r\n    if (setImage) {\r\n      this.setImage(this.srcImage);\r\n    }\r\n  }\r\n\r\n  public reset(): void {\r\n    this.setImage(undefined);\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D): void {\r\n    const bounds: Bounds = this.getBounds();\r\n    if (this.srcImage) {\r\n      ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      const sourceAspect: number = this.srcImage.height / this.srcImage.width;\r\n      const canvasAspect: number = this.canvasHeight / this.canvasWidth;\r\n      let w: number = this.canvasWidth;\r\n      let h: number = this.canvasHeight;\r\n      if (canvasAspect > sourceAspect) {\r\n        w = this.canvasWidth;\r\n        h = this.canvasWidth * sourceAspect;\r\n      } else {\r\n        h = this.canvasHeight;\r\n        w = this.canvasHeight / sourceAspect;\r\n      }\r\n      this.ratioW = w / this.srcImage.width;\r\n      this.ratioH = h / this.srcImage.height;\r\n      if (canvasAspect < sourceAspect) {\r\n        this.drawImageIOSFix(\r\n          ctx,\r\n          this.srcImage,\r\n          0,\r\n          0,\r\n          this.srcImage.width,\r\n          this.srcImage.height,\r\n          this.buffer.width / 2 - w / 2,\r\n          0,\r\n          w,\r\n          h\r\n        );\r\n      } else {\r\n        this.drawImageIOSFix(\r\n          ctx,\r\n          this.srcImage,\r\n          0,\r\n          0,\r\n          this.srcImage.width,\r\n          this.srcImage.height,\r\n          0,\r\n          this.buffer.height / 2 - h / 2,\r\n          w,\r\n          h\r\n        );\r\n      }\r\n      (this.buffer.getContext('2d') as CanvasRenderingContext2D).drawImage(\r\n        this.canvas,\r\n        0,\r\n        0,\r\n        this.canvasWidth,\r\n        this.canvasHeight\r\n      );\r\n\r\n      ctx.lineWidth = this.cropperSettings.cropperDrawSettings.strokeWidth;\r\n      ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.strokeColor;\r\n\r\n      ctx.fillStyle = this.cropperSettings.cropperDrawSettings.backgroundFillColor;\r\n      if (!this.cropperSettings.rounded) {\r\n        ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n        ctx.drawImage(\r\n          this.buffer,\r\n          bounds.left,\r\n          bounds.top,\r\n          Math.max(bounds.width, 1),\r\n          Math.max(bounds.height, 1),\r\n          bounds.left,\r\n          bounds.top,\r\n          bounds.width,\r\n          bounds.height\r\n        );\r\n        ctx.strokeRect(bounds.left, bounds.top, bounds.width, bounds.height);\r\n      } else {\r\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          bounds.left + bounds.width / 2,\r\n          bounds.top + bounds.height / 2,\r\n          bounds.width / 2,\r\n          0,\r\n          2 * Math.PI\r\n        );\r\n        ctx.stroke();\r\n        ctx.clip();\r\n        if (canvasAspect < sourceAspect) {\r\n          this.drawImageIOSFix(\r\n            ctx,\r\n            this.srcImage,\r\n            0,\r\n            0,\r\n            this.srcImage.width,\r\n            this.srcImage.height,\r\n            this.buffer.width / 2 - w / 2,\r\n            0,\r\n            w,\r\n            h\r\n          );\r\n        } else {\r\n          this.drawImageIOSFix(\r\n            ctx,\r\n            this.srcImage,\r\n            0,\r\n            0,\r\n            this.srcImage.width,\r\n            this.srcImage.height,\r\n            0,\r\n            this.buffer.height / 2 - h / 2,\r\n            w,\r\n            h\r\n          );\r\n        }\r\n        ctx.restore();\r\n      }\r\n\r\n      let marker: CornerMarker;\r\n\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < this.markers.length; i++) {\r\n        marker = this.markers[i];\r\n        marker.draw(ctx);\r\n      }\r\n      this.center.draw(ctx);\r\n    } else {\r\n      ctx.fillStyle = 'rgba(192,192,192,1)';\r\n      ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n  }\r\n\r\n  public dragCenter(x: number, y: number, marker: DragMarker) {\r\n    const bounds = this.getBounds();\r\n    const left = x - bounds.width / 2;\r\n    const right = x + bounds.width / 2;\r\n    const top = y - bounds.height / 2;\r\n    const bottom = y + bounds.height / 2;\r\n    if (right >= this.maxXClamp) {\r\n      x = this.maxXClamp - bounds.width / 2;\r\n    }\r\n    if (left <= this.minXClamp) {\r\n      x = bounds.width / 2 + this.minXClamp;\r\n    }\r\n    if (top < this.minYClamp) {\r\n      y = bounds.height / 2 + this.minYClamp;\r\n    }\r\n    if (bottom >= this.maxYClamp) {\r\n      y = this.maxYClamp - bounds.height / 2;\r\n    }\r\n    this.tl.moveX(x - bounds.width / 2);\r\n    this.tl.moveY(y - bounds.height / 2);\r\n    this.tr.moveX(x + bounds.width / 2);\r\n    this.tr.moveY(y - bounds.height / 2);\r\n    this.bl.moveX(x - bounds.width / 2);\r\n    this.bl.moveY(y + bounds.height / 2);\r\n    this.br.moveX(x + bounds.width / 2);\r\n    this.br.moveY(y + bounds.height / 2);\r\n    marker.setPosition(x, y);\r\n  }\r\n\r\n  public enforceMinSize(x: number, y: number, marker: CornerMarker) {\r\n    const xLength = x - marker.getHorizontalNeighbour().position.x;\r\n    const yLength = y - marker.getVerticalNeighbour().position.y;\r\n    const xOver = this.minWidth - Math.abs(xLength);\r\n    const yOver = this.minHeight - Math.abs(yLength);\r\n\r\n    if (xLength === 0 || yLength === 0) {\r\n      x = marker.position.x;\r\n      y = marker.position.y;\r\n\r\n      return new PointPool().instance.borrow(x, y);\r\n    }\r\n\r\n    if (this.keepAspect) {\r\n      if (xOver > 0 && yOver / this.aspectRatio > 0) {\r\n        if (xOver > yOver / this.aspectRatio) {\r\n          if (xLength < 0) {\r\n            x -= xOver;\r\n\r\n            if (yLength < 0) {\r\n              y -= xOver * this.aspectRatio;\r\n            } else {\r\n              y += xOver * this.aspectRatio;\r\n            }\r\n          } else {\r\n            x += xOver;\r\n            if (yLength < 0) {\r\n              y -= xOver * this.aspectRatio;\r\n            } else {\r\n              y += xOver * this.aspectRatio;\r\n            }\r\n          }\r\n        } else {\r\n          if (yLength < 0) {\r\n            y -= yOver;\r\n\r\n            if (xLength < 0) {\r\n              x -= yOver / this.aspectRatio;\r\n            } else {\r\n              x += yOver / this.aspectRatio;\r\n            }\r\n          } else {\r\n            y += yOver;\r\n            if (xLength < 0) {\r\n              x -= yOver / this.aspectRatio;\r\n            } else {\r\n              x += yOver / this.aspectRatio;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (xOver > 0) {\r\n          if (xLength < 0) {\r\n            x -= xOver;\r\n            if (yLength < 0) {\r\n              y -= xOver * this.aspectRatio;\r\n            } else {\r\n              y += xOver * this.aspectRatio;\r\n            }\r\n          } else {\r\n            x += xOver;\r\n            if (yLength < 0) {\r\n              y -= xOver * this.aspectRatio;\r\n            } else {\r\n              y += xOver * this.aspectRatio;\r\n            }\r\n          }\r\n        } else {\r\n          if (yOver > 0) {\r\n            if (yLength < 0) {\r\n              y -= yOver;\r\n\r\n              if (xLength < 0) {\r\n                x -= yOver / this.aspectRatio;\r\n              } else {\r\n                x += yOver / this.aspectRatio;\r\n              }\r\n            } else {\r\n              y += yOver;\r\n              if (xLength < 0) {\r\n                x -= yOver / this.aspectRatio;\r\n              } else {\r\n                x += yOver / this.aspectRatio;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if (xOver > 0) {\r\n        if (xLength < 0) {\r\n          x -= xOver;\r\n        } else {\r\n          x += xOver;\r\n        }\r\n      }\r\n      if (yOver > 0) {\r\n        if (yLength < 0) {\r\n          y -= yOver;\r\n        } else {\r\n          y += yOver;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      x < this.minXClamp ||\r\n      x > this.maxXClamp ||\r\n      y < this.minYClamp ||\r\n      y > this.maxYClamp\r\n    ) {\r\n      x = marker.position.x;\r\n      y = marker.position.y;\r\n    }\r\n\r\n    return new PointPool().instance.borrow(x, y);\r\n  }\r\n\r\n  public dragCorner(x: number, y: number, marker: CornerMarker) {\r\n    let iX = 0;\r\n    let iY = 0;\r\n    let ax = 0;\r\n    let ay = 0;\r\n    let newHeight = 0;\r\n    let newWidth = 0;\r\n    let newY = 0;\r\n    let newX = 0;\r\n    let anchorMarker: CornerMarker;\r\n    let fold = 0;\r\n\r\n    if (this.keepAspect) {\r\n      anchorMarker = marker.getHorizontalNeighbour().getVerticalNeighbour();\r\n      ax = anchorMarker.position.x;\r\n      ay = anchorMarker.position.y;\r\n      if (x <= anchorMarker.position.x) {\r\n        if (y <= anchorMarker.position.y) {\r\n          iX = ax - 100 / this.aspectRatio;\r\n          iY = ay - (100 / this.aspectRatio) * this.aspectRatio;\r\n          fold = this.getSide(\r\n            new PointPool().instance.borrow(iX, iY),\r\n            anchorMarker.position,\r\n            new PointPool().instance.borrow(x, y)\r\n          );\r\n          if (fold > 0) {\r\n            newHeight = Math.abs(anchorMarker.position.y - y);\r\n            newWidth = newHeight / this.aspectRatio;\r\n            newY = anchorMarker.position.y - newHeight;\r\n            newX = anchorMarker.position.x - newWidth;\r\n            const min = this.enforceMinSize(newX, newY, marker);\r\n            marker.move(min.x, min.y);\r\n            new PointPool().instance.returnPoint(min);\r\n          } else {\r\n            if (fold < 0) {\r\n              newWidth = Math.abs(anchorMarker.position.x - x);\r\n              newHeight = newWidth * this.aspectRatio;\r\n              newY = anchorMarker.position.y - newHeight;\r\n              newX = anchorMarker.position.x - newWidth;\r\n              const min = this.enforceMinSize(newX, newY, marker);\r\n              marker.move(min.x, min.y);\r\n              new PointPool().instance.returnPoint(min);\r\n            }\r\n          }\r\n        } else {\r\n          iX = ax - 100 / this.aspectRatio;\r\n          iY = ay + (100 / this.aspectRatio) * this.aspectRatio;\r\n          fold = this.getSide(\r\n            new PointPool().instance.borrow(iX, iY),\r\n            anchorMarker.position,\r\n            new PointPool().instance.borrow(x, y)\r\n          );\r\n          if (fold > 0) {\r\n            newWidth = Math.abs(anchorMarker.position.x - x);\r\n            newHeight = newWidth * this.aspectRatio;\r\n            newY = anchorMarker.position.y + newHeight;\r\n            newX = anchorMarker.position.x - newWidth;\r\n            const min = this.enforceMinSize(newX, newY, marker);\r\n            marker.move(min.x, min.y);\r\n            new PointPool().instance.returnPoint(min);\r\n          } else {\r\n            if (fold < 0) {\r\n              newHeight = Math.abs(anchorMarker.position.y - y);\r\n              newWidth = newHeight / this.aspectRatio;\r\n              newY = anchorMarker.position.y + newHeight;\r\n              newX = anchorMarker.position.x - newWidth;\r\n              const min = this.enforceMinSize(newX, newY, marker);\r\n              marker.move(min.x, min.y);\r\n              new PointPool().instance.returnPoint(min);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (y <= anchorMarker.position.y) {\r\n          iX = ax + 100 / this.aspectRatio;\r\n          iY = ay - (100 / this.aspectRatio) * this.aspectRatio;\r\n          fold = this.getSide(\r\n            new PointPool().instance.borrow(iX, iY),\r\n            anchorMarker.position,\r\n            new PointPool().instance.borrow(x, y)\r\n          );\r\n          if (fold < 0) {\r\n            newHeight = Math.abs(anchorMarker.position.y - y);\r\n            newWidth = newHeight / this.aspectRatio;\r\n            newY = anchorMarker.position.y - newHeight;\r\n            newX = anchorMarker.position.x + newWidth;\r\n            const min = this.enforceMinSize(newX, newY, marker);\r\n            marker.move(min.x, min.y);\r\n            new PointPool().instance.returnPoint(min);\r\n          } else {\r\n            if (fold > 0) {\r\n              newWidth = Math.abs(anchorMarker.position.x - x);\r\n              newHeight = newWidth * this.aspectRatio;\r\n              newY = anchorMarker.position.y - newHeight;\r\n              newX = anchorMarker.position.x + newWidth;\r\n              const min = this.enforceMinSize(newX, newY, marker);\r\n              marker.move(min.x, min.y);\r\n              new PointPool().instance.returnPoint(min);\r\n            }\r\n          }\r\n        } else {\r\n          iX = ax + 100 / this.aspectRatio;\r\n          iY = ay + (100 / this.aspectRatio) * this.aspectRatio;\r\n          fold = this.getSide(\r\n            new PointPool().instance.borrow(iX, iY),\r\n            anchorMarker.position,\r\n            new PointPool().instance.borrow(x, y)\r\n          );\r\n          if (fold < 0) {\r\n            newWidth = Math.abs(anchorMarker.position.x - x);\r\n            newHeight = newWidth * this.aspectRatio;\r\n            newY = anchorMarker.position.y + newHeight;\r\n            newX = anchorMarker.position.x + newWidth;\r\n            const min = this.enforceMinSize(newX, newY, marker);\r\n            marker.move(min.x, min.y);\r\n            new PointPool().instance.returnPoint(min);\r\n          } else {\r\n            if (fold > 0) {\r\n              newHeight = Math.abs(anchorMarker.position.y - y);\r\n              newWidth = newHeight / this.aspectRatio;\r\n              newY = anchorMarker.position.y + newHeight;\r\n              newX = anchorMarker.position.x + newWidth;\r\n              const min = this.enforceMinSize(newX, newY, marker);\r\n              marker.move(min.x, min.y);\r\n              new PointPool().instance.returnPoint(min);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      const min = this.enforceMinSize(x, y, marker);\r\n      marker.move(min.x, min.y);\r\n      new PointPool().instance.returnPoint(min);\r\n    }\r\n    this.center.recalculatePosition(this.getBounds());\r\n  }\r\n\r\n  public getSide(a: Point, b: Point, c: Point): number {\r\n    const n: number = this.sign(\r\n      (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)\r\n    );\r\n\r\n    // TODO move the return of the pools to outside of this function\r\n    new PointPool().instance.returnPoint(a);\r\n    new PointPool().instance.returnPoint(c);\r\n    return n;\r\n  }\r\n\r\n  public handleRelease(newCropTouch: CropTouch) {\r\n    if (newCropTouch == null) {\r\n      return;\r\n    }\r\n    let index = 0;\r\n    for (let k = 0; k < this.currentDragTouches.length; k++) {\r\n      if (newCropTouch.id === this.currentDragTouches[k].id) {\r\n        this.currentDragTouches[k].dragHandle.setDrag(false);\r\n        index = k;\r\n      }\r\n    }\r\n    this.currentDragTouches.splice(index, 1);\r\n    this.draw(this.ctx);\r\n  }\r\n\r\n  public handleMove(newCropTouch: CropTouch) {\r\n    let matched = false;\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let k = 0; k < this.currentDragTouches.length; k++) {\r\n      if (\r\n        newCropTouch.id === this.currentDragTouches[k].id &&\r\n        this.currentDragTouches[k].dragHandle != null\r\n      ) {\r\n        const dragTouch: CropTouch = this.currentDragTouches[k];\r\n        const clampedPositions = this.clampPosition(\r\n          newCropTouch.x - dragTouch.dragHandle.offset.x,\r\n          newCropTouch.y - dragTouch.dragHandle.offset.y\r\n        );\r\n        newCropTouch.x = clampedPositions.x;\r\n        newCropTouch.y = clampedPositions.y;\r\n        new PointPool().instance.returnPoint(clampedPositions);\r\n        if (dragTouch.dragHandle instanceof CornerMarker) {\r\n          this.dragCorner(\r\n            newCropTouch.x,\r\n            newCropTouch.y,\r\n            dragTouch.dragHandle as CornerMarker\r\n          );\r\n        } else {\r\n          this.dragCenter(\r\n            newCropTouch.x,\r\n            newCropTouch.y,\r\n            dragTouch.dragHandle as DragMarker\r\n          );\r\n        }\r\n        this.currentlyInteracting = true;\r\n        matched = true;\r\n        this.imageCropperDataShare.setPressed(this.canvas);\r\n        break;\r\n      }\r\n    }\r\n    if (!matched) {\r\n      for (const marker of this.markers) {\r\n        if (marker.touchInBounds(newCropTouch.x, newCropTouch.y)) {\r\n          newCropTouch.dragHandle = marker;\r\n          this.currentDragTouches.push(newCropTouch);\r\n          marker.setDrag(true);\r\n          newCropTouch.dragHandle.offset.x =\r\n            newCropTouch.x - newCropTouch.dragHandle.position.x;\r\n          newCropTouch.dragHandle.offset.y =\r\n            newCropTouch.y - newCropTouch.dragHandle.position.y;\r\n          this.dragCorner(\r\n            newCropTouch.x - newCropTouch.dragHandle.offset.x,\r\n            newCropTouch.y - newCropTouch.dragHandle.offset.y,\r\n            newCropTouch.dragHandle as CornerMarker\r\n          );\r\n          break;\r\n        }\r\n      }\r\n      if (\r\n        newCropTouch.dragHandle === null ||\r\n        typeof newCropTouch.dragHandle === 'undefined'\r\n      ) {\r\n        if (this.center.touchInBounds(newCropTouch.x, newCropTouch.y)) {\r\n          newCropTouch.dragHandle = this.center;\r\n          this.currentDragTouches.push(newCropTouch);\r\n          newCropTouch.dragHandle.setDrag(true);\r\n          newCropTouch.dragHandle.offset.x =\r\n            newCropTouch.x - newCropTouch.dragHandle.position.x;\r\n          newCropTouch.dragHandle.offset.y =\r\n            newCropTouch.y - newCropTouch.dragHandle.position.y;\r\n          this.dragCenter(\r\n            newCropTouch.x - newCropTouch.dragHandle.offset.x,\r\n            newCropTouch.y - newCropTouch.dragHandle.offset.y,\r\n            newCropTouch.dragHandle as DragMarker\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public updateClampBounds() {\r\n    const sourceAspect = this.srcImage.height / this.srcImage.width;\r\n    const canvasAspect = this.canvas.height / this.canvas.width;\r\n    let w = this.canvas.width;\r\n    let h = this.canvas.height;\r\n    if (canvasAspect > sourceAspect) {\r\n      w = this.canvas.width;\r\n      h = this.canvas.width * sourceAspect;\r\n    } else {\r\n      h = this.canvas.height;\r\n      w = this.canvas.height / sourceAspect;\r\n    }\r\n    this.minXClamp = this.canvas.width / 2 - w / 2;\r\n    this.minYClamp = this.canvas.height / 2 - h / 2;\r\n    this.maxXClamp = this.canvas.width / 2 + w / 2;\r\n    this.maxYClamp = this.canvas.height / 2 + h / 2;\r\n  }\r\n\r\n  public getCropBounds() {\r\n    const bounds = this.getBounds();\r\n    bounds.top = Math.round((bounds.top - this.minYClamp) / this.ratioH);\r\n    bounds.bottom = Math.round((bounds.bottom - this.minYClamp) / this.ratioH);\r\n    bounds.left = Math.round((bounds.left - this.minXClamp) / this.ratioW);\r\n    bounds.right = Math.round((bounds.right - this.minXClamp) / this.ratioW);\r\n    return bounds;\r\n  }\r\n\r\n  public clampPosition(x: number, y: number) {\r\n    if (x < this.minXClamp) {\r\n      x = this.minXClamp;\r\n    }\r\n    if (x > this.maxXClamp) {\r\n      x = this.maxXClamp;\r\n    }\r\n    if (y < this.minYClamp) {\r\n      y = this.minYClamp;\r\n    }\r\n    if (y > this.maxYClamp) {\r\n      y = this.maxYClamp;\r\n    }\r\n    return new PointPool().instance.borrow(x, y);\r\n  }\r\n\r\n  public isImageSet() {\r\n    return this.imageSet;\r\n  }\r\n\r\n  public setImage(img: any) {\r\n    this.srcImage = img;\r\n    if (!img) {\r\n      this.imageSet = false;\r\n      this.draw(this.ctx);\r\n    } else {\r\n      this.imageSet = true;\r\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n      const bufferContext = this.buffer.getContext(\r\n        '2d'\r\n      ) as CanvasRenderingContext2D;\r\n      bufferContext.clearRect(0, 0, this.buffer.width, this.buffer.height);\r\n\r\n      if (!this.cropperSettings.fileType) {\r\n        this.fileType = this.getDataUriMimeType(img.src);\r\n      }\r\n\r\n      if (this.cropperSettings.minWithRelativeToResolution) {\r\n        this.minWidth =\r\n          (this.canvas.width * this.cropperSettings.minWidth) /\r\n          this.srcImage.width;\r\n        this.minHeight =\r\n          (this.canvas.height * this.cropperSettings.minHeight) /\r\n          this.srcImage.height;\r\n      }\r\n\r\n      this.updateClampBounds();\r\n      this.canvasWidth = this.canvas.width;\r\n      this.canvasHeight = this.canvas.height;\r\n\r\n      const cropPosition: Point[] = this.getCropPositionFromMarkers();\r\n      this.setCropPosition(cropPosition);\r\n    }\r\n  }\r\n\r\n  public updateCropPosition(cropBounds: Bounds): void {\r\n    const cropPosition: Point[] = this.getCropPositionFromBounds(cropBounds);\r\n    this.setCropPosition(cropPosition);\r\n  }\r\n\r\n  private setCropPosition(cropPosition: Point[]): void {\r\n    this.tl.setPosition(cropPosition[0].x, cropPosition[0].y);\r\n    this.tr.setPosition(cropPosition[1].x, cropPosition[1].y);\r\n    this.bl.setPosition(cropPosition[2].x, cropPosition[2].y);\r\n    this.br.setPosition(cropPosition[3].x, cropPosition[3].y);\r\n    this.center.setPosition(cropPosition[4].x, cropPosition[4].y);\r\n\r\n    for (const position of cropPosition) {\r\n      new PointPool().instance.returnPoint(position);\r\n    }\r\n\r\n    this.vertSquashRatio = this.detectVerticalSquash(this.srcImage);\r\n    this.draw(this.ctx);\r\n    this.croppedImage = this.getCroppedImageHelper(\r\n      false,\r\n      this.cropWidth,\r\n      this.cropHeight\r\n    );\r\n  }\r\n\r\n  private getCropPositionFromMarkers(): Point[] {\r\n    const w: number = this.canvas.width;\r\n    const h: number = this.canvas.height;\r\n    let tlPos: Point;\r\n    let trPos: Point;\r\n    let blPos: Point;\r\n    let brPos: Point;\r\n    let center: Point;\r\n    const sourceAspect: number = this.srcImage.height / this.srcImage.width;\r\n    const cropBounds: Bounds = this.getBounds();\r\n    const cropAspect: number = cropBounds.height / cropBounds.width;\r\n    const cX: number = this.canvas.width / 2;\r\n    const cY: number = this.canvas.height / 2;\r\n\r\n    if (cropAspect > sourceAspect) {\r\n      const imageH = Math.min(w * sourceAspect, h);\r\n      const cropW = imageH / cropAspect;\r\n      tlPos = new PointPool().instance.borrow(cX - cropW / 2, cY + imageH / 2);\r\n      trPos = new PointPool().instance.borrow(cX + cropW / 2, cY + imageH / 2);\r\n      blPos = new PointPool().instance.borrow(cX - cropW / 2, cY - imageH / 2);\r\n      brPos = new PointPool().instance.borrow(cX + cropW / 2, cY - imageH / 2);\r\n    } else {\r\n      const imageW = Math.min(h / sourceAspect, w);\r\n      const cropH = imageW * cropAspect;\r\n      tlPos = new PointPool().instance.borrow(cX - imageW / 2, cY + cropH / 2);\r\n      trPos = new PointPool().instance.borrow(cX + imageW / 2, cY + cropH / 2);\r\n      blPos = new PointPool().instance.borrow(cX - imageW / 2, cY - cropH / 2);\r\n      brPos = new PointPool().instance.borrow(cX + imageW / 2, cY - cropH / 2);\r\n    }\r\n\r\n    center = new PointPool().instance.borrow(cX, cY);\r\n    const positions: Point[] = [tlPos, trPos, blPos, brPos, center];\r\n    return positions;\r\n  }\r\n\r\n  private getCropPositionFromBounds(cropPosition: Bounds): Point[] {\r\n    let marginTop = 0;\r\n    let marginLeft = 0;\r\n    const canvasAspect: number = this.canvasHeight / this.canvasWidth;\r\n    const sourceAspect: number = this.srcImage.height / this.srcImage.width;\r\n\r\n    if (canvasAspect > sourceAspect) {\r\n      marginTop =\r\n        this.buffer.height / 2 - (this.canvasWidth * sourceAspect) / 2;\r\n    } else {\r\n      marginLeft = this.buffer.width / 2 - this.canvasHeight / sourceAspect / 2;\r\n    }\r\n\r\n    const ratioW: number =\r\n      (this.canvasWidth - marginLeft * 2) / this.srcImage.width;\r\n    const ratioH: number =\r\n      (this.canvasHeight - marginTop * 2) / this.srcImage.height;\r\n\r\n    let actualH: number = cropPosition.height * ratioH;\r\n    let actualW: number = cropPosition.width * ratioW;\r\n    const actualX: number = cropPosition.left * ratioW + marginLeft;\r\n    const actualY: number = cropPosition.top * ratioH + marginTop;\r\n\r\n    if (this.keepAspect) {\r\n      const scaledW: number = actualH / this.aspectRatio;\r\n      const scaledH: number = actualW * this.aspectRatio;\r\n\r\n      if (this.getCropBounds().height === cropPosition.height) {\r\n        // only width changed\r\n        actualH = scaledH;\r\n      } else if (this.getCropBounds().width === cropPosition.width) {\r\n        // only height changed\r\n        actualW = scaledW;\r\n      } else {\r\n        // height and width changed\r\n        if (Math.abs(scaledH - actualH) < Math.abs(scaledW - actualW)) {\r\n          actualW = scaledW;\r\n        } else {\r\n          actualH = scaledH;\r\n        }\r\n      }\r\n    }\r\n\r\n    const tlPos: Point = new PointPool().instance.borrow(\r\n      actualX,\r\n      actualY + actualH\r\n    );\r\n    const trPos: Point = new PointPool().instance.borrow(\r\n      actualX + actualW,\r\n      actualY + actualH\r\n    );\r\n    const blPos: Point = new PointPool().instance.borrow(actualX, actualY);\r\n    const brPos: Point = new PointPool().instance.borrow(\r\n      actualX + actualW,\r\n      actualY\r\n    );\r\n    const center: Point = new PointPool().instance.borrow(\r\n      actualX + actualW / 2,\r\n      actualY + actualH / 2\r\n    );\r\n\r\n    const positions: Point[] = [tlPos, trPos, blPos, brPos, center];\r\n    return positions;\r\n  }\r\n\r\n  public getCroppedImageHelper(\r\n    preserveSize?: boolean,\r\n    fillWidth?: number,\r\n    fillHeight?: number\r\n  ): HTMLImageElement {\r\n    if (this.cropperSettings.cropOnResize) {\r\n      return this.getCroppedImage(preserveSize, fillWidth, fillHeight);\r\n    }\r\n    return this.croppedImage\r\n      ? this.croppedImage\r\n      : document.createElement('img');\r\n  }\r\n\r\n  // todo: Unused parameters?\r\n  public getCroppedImage(\r\n    preserveSize?: boolean,\r\n    fillWidth?: number,\r\n    fillHeight?: number\r\n  ): HTMLImageElement {\r\n    const bounds: Bounds = this.getBounds();\r\n    if (!this.srcImage) {\r\n      return document.createElement('img');\r\n    } else {\r\n      const sourceAspect: number = this.srcImage.height / this.srcImage.width;\r\n      const canvasAspect: number = this.canvas.height / this.canvas.width;\r\n      let w: number = this.canvas.width;\r\n      let h: number = this.canvas.height;\r\n      if (canvasAspect > sourceAspect) {\r\n        w = this.canvas.width;\r\n        h = this.canvas.width * sourceAspect;\r\n      } else {\r\n        if (canvasAspect < sourceAspect) {\r\n          h = this.canvas.height;\r\n          w = this.canvas.height / sourceAspect;\r\n        } else {\r\n          h = this.canvas.height;\r\n          w = this.canvas.width;\r\n        }\r\n      }\r\n      this.ratioW = w / this.srcImage.width;\r\n      this.ratioH = h / this.srcImage.height;\r\n      const offsetH: number = (this.buffer.height - h) / 2 / this.ratioH;\r\n      const offsetW: number = (this.buffer.width - w) / 2 / this.ratioW;\r\n\r\n      const ctx = this.cropCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n      if (this.cropperSettings.preserveSize || preserveSize) {\r\n        const width = Math.round(\r\n          bounds.right / this.ratioW - bounds.left / this.ratioW\r\n        );\r\n        const height = Math.round(\r\n          bounds.bottom / this.ratioH - bounds.top / this.ratioH\r\n        );\r\n\r\n        this.cropCanvas.width = width;\r\n        this.cropCanvas.height = height;\r\n\r\n        this.cropperSettings.croppedWidth = this.cropCanvas.width;\r\n        this.cropperSettings.croppedHeight = this.cropCanvas.height;\r\n      } else {\r\n        this.cropCanvas.width = this.cropWidth;\r\n        this.cropCanvas.height = this.cropHeight;\r\n      }\r\n\r\n      ctx.clearRect(0, 0, this.cropCanvas.width, this.cropCanvas.height);\r\n      this.drawImageIOSFix(\r\n        ctx,\r\n        this.srcImage,\r\n        Math.max(Math.round(bounds.left / this.ratioW - offsetW), 0),\r\n        Math.max(Math.round(bounds.top / this.ratioH - offsetH), 0),\r\n        Math.max(Math.round(bounds.width / this.ratioW), 1),\r\n        Math.max(Math.round(bounds.height / this.ratioH), 1),\r\n        0,\r\n        0,\r\n        this.cropCanvas.width,\r\n        this.cropCanvas.height\r\n      );\r\n\r\n      if (this.cropperSettings.resampleFn) {\r\n        this.cropperSettings.resampleFn(this.cropCanvas);\r\n      }\r\n\r\n      this.croppedImage.width = this.cropCanvas.width;\r\n      this.croppedImage.height = this.cropCanvas.height;\r\n      this.croppedImage.src = this.cropCanvas.toDataURL(\r\n        this.fileType,\r\n        this.cropperSettings.compressRatio\r\n      );\r\n      return this.croppedImage;\r\n    }\r\n  }\r\n\r\n  public getBounds(): Bounds {\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    for (const marker of this.markers) {\r\n      if (marker.position.x < minX) {\r\n        minX = marker.position.x;\r\n      }\r\n      if (marker.position.x > maxX) {\r\n        maxX = marker.position.x;\r\n      }\r\n      if (marker.position.y < minY) {\r\n        minY = marker.position.y;\r\n      }\r\n      if (marker.position.y > maxY) {\r\n        maxY = marker.position.y;\r\n      }\r\n    }\r\n    const bounds: Bounds = new Bounds();\r\n    bounds.left = minX;\r\n    bounds.right = maxX;\r\n    bounds.top = minY;\r\n    bounds.bottom = maxY;\r\n    return bounds;\r\n  }\r\n\r\n  public setBounds(bounds: any) {\r\n    // const topLeft: CornerMarker;\r\n    // const topRight: CornerMarker;\r\n    // const bottomLeft: CornerMarker;\r\n    // const bottomRight: CornerMarker;\r\n\r\n    const currentBounds = this.getBounds();\r\n    for (const marker of this.markers) {\r\n      if (marker.position.x === currentBounds.left) {\r\n        if (marker.position.y === currentBounds.top) {\r\n          marker.setPosition(bounds.left, bounds.top);\r\n        } else {\r\n          marker.setPosition(bounds.left, bounds.bottom);\r\n        }\r\n      } else {\r\n        if (marker.position.y === currentBounds.top) {\r\n          marker.setPosition(bounds.right, bounds.top);\r\n        } else {\r\n          marker.setPosition(bounds.right, bounds.bottom);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.center.recalculatePosition(bounds);\r\n    this.center.draw(this.ctx);\r\n    this.draw(this.ctx); // we need to redraw all canvas if we have changed bounds\r\n  }\r\n\r\n  public onTouchMove(event: TouchEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      if (event.touches.length === 1) {\r\n        if (this.isMouseDown) {\r\n          event.preventDefault();\r\n          // tslint:disable-next-line:prefer-for-of\r\n          for (let i = 0; i < event.touches.length; i++) {\r\n            const touch = event.touches[i];\r\n            const touchPosition = this.getTouchPos(this.canvas, touch);\r\n            const cropTouch = new CropTouch(\r\n              touchPosition.x,\r\n              touchPosition.y,\r\n              touch.identifier\r\n            );\r\n            new PointPool().instance.returnPoint(touchPosition);\r\n            this.move(cropTouch);\r\n          }\r\n        }\r\n      } else {\r\n        if (event.touches.length === 2) {\r\n          event.preventDefault();\r\n\r\n          const distance =\r\n            (event.touches[0].clientX - event.touches[1].clientX) *\r\n              (event.touches[0].clientX - event.touches[1].clientX) +\r\n            (event.touches[0].clientY - event.touches[1].clientY) *\r\n              (event.touches[0].clientY - event.touches[1].clientY);\r\n          if (this.previousDistance && this.previousDistance !== distance) {\r\n            const bounds = this.getBounds();\r\n\r\n            if (distance < this.previousDistance) {\r\n              bounds.top += 1;\r\n              bounds.left += 1;\r\n              bounds.right -= 1;\r\n              bounds.bottom -= 1;\r\n            }\r\n\r\n            if (distance > this.previousDistance) {\r\n              if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // none\r\n                bounds.top -= 1;\r\n                bounds.left -= 1;\r\n                bounds.right += 1;\r\n                bounds.bottom += 1;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left === this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // left\r\n                bounds.top -= 1;\r\n                bounds.right += 2;\r\n                bounds.bottom += 1;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right === this.maxXClamp\r\n              ) {\r\n                // right\r\n                bounds.top -= 1;\r\n                bounds.left -= 2;\r\n                bounds.bottom += 1;\r\n              } else if (\r\n                bounds.top === this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // top\r\n                bounds.left -= 1;\r\n                bounds.right += 1;\r\n                bounds.bottom += 2;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom === this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // bottom\r\n                bounds.top -= 2;\r\n                bounds.left -= 1;\r\n                bounds.right += 1;\r\n              } else if (\r\n                bounds.top === this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left === this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // top left\r\n                bounds.right += 2;\r\n                bounds.bottom += 2;\r\n              } else if (\r\n                bounds.top === this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right === this.maxXClamp\r\n              ) {\r\n                // top right\r\n                bounds.left -= 2;\r\n                bounds.bottom += 2;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom === this.maxYClamp &&\r\n                bounds.left === this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // bottom left\r\n                bounds.top -= 2;\r\n                bounds.right += 2;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom === this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right === this.maxXClamp\r\n              ) {\r\n                // bottom right\r\n                bounds.top -= 2;\r\n                bounds.left -= 2;\r\n              }\r\n            }\r\n\r\n            if (bounds.top < this.minYClamp) {\r\n              bounds.top = this.minYClamp;\r\n            }\r\n            if (bounds.bottom > this.maxYClamp) {\r\n              bounds.bottom = this.maxYClamp;\r\n            }\r\n            if (bounds.left < this.minXClamp) {\r\n              bounds.left = this.minXClamp;\r\n            }\r\n            if (bounds.right > this.maxXClamp) {\r\n              bounds.right = this.maxXClamp;\r\n            }\r\n\r\n            this.setBounds(bounds);\r\n          }\r\n          this.previousDistance = distance;\r\n        }\r\n      }\r\n      this.draw(this.ctx);\r\n    }\r\n  }\r\n\r\n  public onMouseMove(e: MouseEvent) {\r\n    if (this.crop.isImageSet() && this.isMouseDown) {\r\n      const mousePosition = this.getMousePos(this.canvas, e);\r\n      this.move(new CropTouch(mousePosition.x, mousePosition.y, 0));\r\n      let dragTouch = this.getDragTouchForID(0);\r\n      if (dragTouch) {\r\n        dragTouch.x = mousePosition.x;\r\n        dragTouch.y = mousePosition.y;\r\n      } else {\r\n        dragTouch = new CropTouch(mousePosition.x, mousePosition.y, 0);\r\n      }\r\n      new PointPool().instance.returnPoint(mousePosition);\r\n      this.drawCursors(dragTouch);\r\n      this.draw(this.ctx);\r\n    }\r\n  }\r\n\r\n  public move(cropTouch: CropTouch) {\r\n    if (this.isMouseDown) {\r\n      this.handleMove(cropTouch);\r\n    }\r\n  }\r\n\r\n  public getDragTouchForID(id: any): CropTouch | undefined {\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < this.currentDragTouches.length; i++) {\r\n      if (id === this.currentDragTouches[i].id) {\r\n        return this.currentDragTouches[i];\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public drawCursors(cropTouch: CropTouch) {\r\n    let cursorDrawn = false;\r\n    if (cropTouch != null) {\r\n      if (cropTouch.dragHandle === this.center) {\r\n        this.imageCropperDataShare.setStyle(this.canvas, 'move');\r\n        cursorDrawn = true;\r\n      }\r\n      if (\r\n        cropTouch.dragHandle !== null &&\r\n        cropTouch.dragHandle instanceof CornerMarker\r\n      ) {\r\n        this.drawCornerCursor(\r\n          cropTouch.dragHandle,\r\n          cropTouch.dragHandle.position.x,\r\n          cropTouch.dragHandle.position.y\r\n        );\r\n        cursorDrawn = true;\r\n      }\r\n    }\r\n    let didDraw = false;\r\n    if (!cursorDrawn) {\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < this.markers.length; i++) {\r\n        didDraw =\r\n          didDraw ||\r\n          this.drawCornerCursor(this.markers[i], cropTouch.x, cropTouch.y);\r\n      }\r\n      if (!didDraw) {\r\n        this.imageCropperDataShare.setStyle(this.canvas, 'initial');\r\n      }\r\n    }\r\n    if (\r\n      !didDraw &&\r\n      !cursorDrawn &&\r\n      this.center.touchInBounds(cropTouch.x, cropTouch.y)\r\n    ) {\r\n      this.center.setOver(true);\r\n      this.imageCropperDataShare.setOver(this.canvas);\r\n      this.imageCropperDataShare.setStyle(this.canvas, 'move');\r\n    } else {\r\n      this.center.setOver(false);\r\n    }\r\n  }\r\n\r\n  public drawCornerCursor(marker: any, x: number, y: number) {\r\n    if (marker.touchInBounds(x, y)) {\r\n      marker.setOver(true);\r\n      if (marker.getHorizontalNeighbour().position.x > marker.position.x) {\r\n        if (marker.getVerticalNeighbour().position.y > marker.position.y) {\r\n          this.imageCropperDataShare.setOver(this.canvas);\r\n          this.imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\r\n        } else {\r\n          this.imageCropperDataShare.setOver(this.canvas);\r\n          this.imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\r\n        }\r\n      } else {\r\n        if (marker.getVerticalNeighbour().position.y > marker.position.y) {\r\n          this.imageCropperDataShare.setOver(this.canvas);\r\n          this.imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\r\n        } else {\r\n          this.imageCropperDataShare.setOver(this.canvas);\r\n          this.imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    marker.setOver(false);\r\n    return false;\r\n  }\r\n\r\n  public onTouchStart(event: TouchEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      const touch = event.touches[0];\r\n      const touchPosition = this.getTouchPos(this.canvas, touch);\r\n      const cropTouch = new CropTouch(\r\n        touchPosition.x,\r\n        touchPosition.y,\r\n        touch.identifier\r\n      );\r\n      new PointPool().instance.returnPoint(touchPosition);\r\n\r\n      this.isMouseDown = false;\r\n      for (const marker of this.markers) {\r\n        if (marker.touchInBounds(cropTouch.x, cropTouch.y)) {\r\n          this.isMouseDown = true;\r\n        }\r\n      }\r\n      if (this.center.touchInBounds(cropTouch.x, cropTouch.y)) {\r\n        this.isMouseDown = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  public onTouchEnd(event: TouchEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < event.changedTouches.length; i++) {\r\n        const touch = event.changedTouches[i];\r\n        const dragTouch = this.getDragTouchForID(touch.identifier);\r\n        if (dragTouch && dragTouch !== undefined) {\r\n          if (\r\n            dragTouch.dragHandle instanceof CornerMarker ||\r\n            dragTouch.dragHandle instanceof DragMarker\r\n          ) {\r\n            dragTouch.dragHandle.setOver(false);\r\n          }\r\n          this.handleRelease(dragTouch);\r\n        }\r\n      }\r\n\r\n      if (this.currentDragTouches.length === 0) {\r\n        this.isMouseDown = false;\r\n        this.currentlyInteracting = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\r\n  public drawImageIOSFix(\r\n    ctx: CanvasRenderingContext2D,\r\n    img: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement,\r\n    sx: number,\r\n    sy: number,\r\n    sw: number,\r\n    sh: number,\r\n    dx: number,\r\n    dy: number,\r\n    dw: number,\r\n    dh: number\r\n  ) {\r\n    // Works only if whole image is displayed:\r\n    // ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\r\n    // The following works correct also when only a part of the image is displayed:\r\n    // ctx.drawImage(img, sx * this.vertSquashRatio, sy * this.vertSquashRatio, sw * this.vertSquashRatio, sh *\r\n    // this.vertSquashRatio, dx, dy, dw, dh);\r\n    ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh);\r\n  }\r\n\r\n  public onMouseDown(event: MouseEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      this.isMouseDown = true;\r\n    }\r\n  }\r\n\r\n  public onMouseUp(event: MouseEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      this.imageCropperDataShare.setReleased(this.canvas);\r\n      this.isMouseDown = false;\r\n      this.handleRelease(new CropTouch(0, 0, 0));\r\n    }\r\n  }\r\n}\r\n","import { Bounds } from './bounds';\r\n\r\nexport class CropPosition {\r\n  public x: number;\r\n  public y: number;\r\n  public w: number;\r\n  public h: number;\r\n\r\n  constructor(x: number = 0, y: number = 0, w: number = 0, h: number = 0) {\r\n    this.x = +x;\r\n    this.y = +y;\r\n    this.w = +w;\r\n    this.h = +h;\r\n  }\r\n\r\n  public toBounds(): Bounds {\r\n    return new Bounds(this.x, this.y, this.w, this.h);\r\n  }\r\n\r\n  public isInitialized(): boolean {\r\n    return this.x !== 0 && this.y !== 0 && this.w !== 0 && this.h !== 0;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  AfterViewInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  Renderer2,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport { CropperSettings } from './cropper-settings';\r\nimport { ImageCropper } from './imageCropper';\r\nimport { CropPosition } from './model/cropPosition';\r\nimport { Bounds } from './model/bounds';\r\nimport { Exif } from './exif';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'img-cropper',\r\n  templateUrl: './image-cropper.component.html'\r\n})\r\nexport class ImageCropperComponent\r\n  implements AfterViewInit, OnChanges, OnDestroy {\r\n  @ViewChild('cropcanvas', { static: true })\r\n  cropcanvas: ElementRef;\r\n  @ViewChild('fileInput', { static: false }) fileInput: ElementRef;\r\n\r\n  @Input() public settings: CropperSettings;\r\n  @Input() public image: any;\r\n  @Input() public inputImage: any;\r\n  @Input() public cropper: ImageCropper;\r\n  @Input() public cropPosition: CropPosition;\r\n  @Output()\r\n  public cropPositionChange: EventEmitter<CropPosition> = new EventEmitter<\r\n    CropPosition\r\n  >();\r\n\r\n  private exif = new Exif();\r\n\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() public onCrop: EventEmitter<any> = new EventEmitter();\r\n  @Output() imageSet: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  public croppedWidth: number;\r\n  public croppedHeight: number;\r\n  public intervalRef: number;\r\n  public raf: number;\r\n  public renderer: Renderer2;\r\n  public windowListener: EventListenerObject;\r\n\r\n  private isCropPositionUpdateNeeded: boolean;\r\n\r\n  constructor(renderer: Renderer2) {\r\n    this.renderer = renderer;\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    const canvas: HTMLCanvasElement = this.cropcanvas.nativeElement;\r\n\r\n    if (!this.settings) {\r\n      this.settings = new CropperSettings();\r\n    }\r\n\r\n    if (this.settings.cropperClass) {\r\n      this.renderer.setAttribute(canvas, 'class', this.settings.cropperClass);\r\n    }\r\n\r\n    if (!this.settings.dynamicSizing) {\r\n      this.renderer.setAttribute(\r\n        canvas,\r\n        'width',\r\n        this.settings.canvasWidth.toString()\r\n      );\r\n      this.renderer.setAttribute(\r\n        canvas,\r\n        'height',\r\n        this.settings.canvasHeight.toString()\r\n      );\r\n    } else {\r\n      this.windowListener = this.resize.bind(this);\r\n      window.addEventListener('resize', this.windowListener);\r\n    }\r\n\r\n    if (!this.cropper) {\r\n      this.cropper = new ImageCropper(this.settings);\r\n    }\r\n\r\n    this.cropper.prepare(canvas);\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.isCropPositionChanged(changes)) {\r\n      this.cropper.updateCropPosition(this.cropPosition.toBounds());\r\n      if (this.cropper.isImageSet()) {\r\n        const bounds = this.cropper.getCropBounds();\r\n        this.image.image = this.cropper.getCroppedImageHelper().src;\r\n        this.onCrop.emit(bounds);\r\n      }\r\n      this.updateCropBounds();\r\n    }\r\n\r\n    if (changes.inputImage) {\r\n      this.setImage(changes.inputImage.currentValue);\r\n    }\r\n\r\n    if (changes.settings && this.cropper) {\r\n      this.cropper.updateSettings(this.settings);\r\n      if (this.cropper.isImageSet()) {\r\n        this.image.image = this.cropper.getCroppedImageHelper().src;\r\n        this.onCrop.emit(this.cropper.getCropBounds());\r\n      }\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    if (this.settings.dynamicSizing && this.windowListener) {\r\n      window.removeEventListener('resize', this.windowListener);\r\n    }\r\n  }\r\n\r\n  public onTouchMove(event: TouchEvent): void {\r\n    this.cropper.onTouchMove(event);\r\n  }\r\n\r\n  public onTouchStart(event: TouchEvent): void {\r\n    this.cropper.onTouchStart(event);\r\n  }\r\n\r\n  public onTouchEnd(event: TouchEvent): void {\r\n    this.cropper.onTouchEnd(event);\r\n    if (this.cropper.isImageSet()) {\r\n      this.image.image = this.cropper.getCroppedImageHelper().src;\r\n      this.onCrop.emit(this.cropper.getCropBounds());\r\n      this.updateCropBounds();\r\n    }\r\n  }\r\n\r\n  public onMouseDown(event: MouseEvent): void {\r\n    this.cropper.onMouseDown(event);\r\n    // if (!this.cropper.isImageSet() && !this.settings.noFileInput) {\r\n    //   // load img\r\n    //   this.fileInput.nativeElement.click();\r\n    // }\r\n  }\r\n\r\n  public onMouseUp(event: MouseEvent): void {\r\n    if (this.cropper.isImageSet()) {\r\n      this.cropper.onMouseUp(event);\r\n      this.image.image = this.cropper.getCroppedImageHelper().src;\r\n      this.onCrop.emit(this.cropper.getCropBounds());\r\n      this.updateCropBounds();\r\n    }\r\n  }\r\n\r\n  public onMouseMove(event: MouseEvent): void {\r\n    this.cropper.onMouseMove(event);\r\n  }\r\n\r\n  public fileChangeListener($event: any) {\r\n    if ($event.target.files.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const file: File = $event.target.files[0];\r\n    if (this.settings.allowedFilesRegex.test(file.name)) {\r\n      const image: any = new Image();\r\n      const fileReader: FileReader = new FileReader();\r\n\r\n      fileReader.addEventListener('loadend', (loadEvent: any) => {\r\n        image.addEventListener('load', () => {\r\n          this.setImage(image);\r\n        });\r\n        image.src = loadEvent.target.result;\r\n      });\r\n\r\n      fileReader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  private resize() {\r\n    const canvas: HTMLCanvasElement = this.cropcanvas.nativeElement;\r\n    this.settings.canvasWidth = canvas.offsetWidth;\r\n    this.settings.canvasHeight = canvas.offsetHeight;\r\n    this.cropper.resizeCanvas(canvas.offsetWidth, canvas.offsetHeight, true);\r\n  }\r\n\r\n  public reset(): void {\r\n    this.cropper.reset();\r\n    this.renderer.setAttribute(\r\n      this.cropcanvas.nativeElement,\r\n      'class',\r\n      this.settings.cropperClass\r\n    );\r\n    this.image.image = this.cropper.getCroppedImageHelper().src;\r\n  }\r\n\r\n  public setImage(image: HTMLImageElement, newBounds: any = null) {\r\n    this.imageSet.emit(true);\r\n    this.renderer.setAttribute(\r\n      this.cropcanvas.nativeElement,\r\n      'class',\r\n      `${this.settings.cropperClass} ${this.settings.croppingClass}`\r\n    );\r\n    this.raf = window.requestAnimationFrame(() => {\r\n      if (this.raf) {\r\n        window.cancelAnimationFrame(this.raf);\r\n      }\r\n      if (image.naturalHeight > 0 && image.naturalWidth > 0) {\r\n        image.height = image.naturalHeight;\r\n        image.width = image.naturalWidth;\r\n\r\n        window.cancelAnimationFrame(this.raf);\r\n        this.getOrientedImage(image, (img: HTMLImageElement) => {\r\n          if (this.settings.dynamicSizing) {\r\n            const canvas: HTMLCanvasElement = this.cropcanvas.nativeElement;\r\n            this.settings.canvasWidth = canvas.offsetWidth;\r\n            this.settings.canvasHeight = canvas.offsetHeight;\r\n            this.cropper.resizeCanvas(\r\n              canvas.offsetWidth,\r\n              canvas.offsetHeight,\r\n              false\r\n            );\r\n          }\r\n\r\n          this.cropper.setImage(img);\r\n          if (this.cropPosition && this.cropPosition.isInitialized()) {\r\n            this.cropper.updateCropPosition(this.cropPosition.toBounds());\r\n          }\r\n\r\n          this.image.original = img;\r\n          let bounds = this.cropper.getCropBounds();\r\n          this.image.image = this.cropper.getCroppedImageHelper().src;\r\n\r\n          if (!this.image) {\r\n            this.image = image;\r\n          }\r\n\r\n          if (newBounds != null) {\r\n            bounds = newBounds;\r\n            this.cropper.setBounds(bounds);\r\n            this.cropper.updateCropPosition(bounds);\r\n          }\r\n          this.onCrop.emit(bounds);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private isCropPositionChanged(changes: SimpleChanges): boolean {\r\n    if (\r\n      this.cropper &&\r\n      changes.cropPosition &&\r\n      this.isCropPositionUpdateNeeded\r\n    ) {\r\n      return true;\r\n    } else {\r\n      this.isCropPositionUpdateNeeded = true;\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private updateCropBounds(): void {\r\n    const cropBound: Bounds = this.cropper.getCropBounds();\r\n    this.cropPositionChange.emit(\r\n      new CropPosition(\r\n        cropBound.left,\r\n        cropBound.top,\r\n        cropBound.width,\r\n        cropBound.height\r\n      )\r\n    );\r\n    this.isCropPositionUpdateNeeded = false;\r\n  }\r\n\r\n  private getOrientedImage(\r\n    image: HTMLImageElement,\r\n    callback: (img: HTMLImageElement) => void\r\n  ) {\r\n    let img: any;\r\n\r\n    this.exif.getData(image, () => {\r\n      const orientation = this.exif.getTag(image, 'Orientation');\r\n\r\n      if ([3, 6, 8].indexOf(orientation) > -1) {\r\n        const canvas: HTMLCanvasElement = document.createElement('canvas');\r\n        const ctx: CanvasRenderingContext2D = canvas.getContext(\r\n          '2d'\r\n        ) as CanvasRenderingContext2D;\r\n        let cw: number = image.width;\r\n        let ch: number = image.height;\r\n        let cx = 0;\r\n        let cy = 0;\r\n        let deg = 0;\r\n\r\n        switch (orientation) {\r\n          case 3:\r\n            cx = -image.width;\r\n            cy = -image.height;\r\n            deg = 180;\r\n            break;\r\n          case 6:\r\n            cw = image.height;\r\n            ch = image.width;\r\n            cy = -image.height;\r\n            deg = 90;\r\n            break;\r\n          case 8:\r\n            cw = image.height;\r\n            ch = image.width;\r\n            cx = -image.width;\r\n            deg = 270;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n\r\n        canvas.width = cw;\r\n        canvas.height = ch;\r\n        ctx.rotate((deg * Math.PI) / 180);\r\n        ctx.drawImage(image, cx, cy);\r\n        img = document.createElement('img');\r\n        img.width = cw;\r\n        img.height = ch;\r\n        img.addEventListener('load', () => {\r\n          callback(img);\r\n        });\r\n        img.src = canvas.toDataURL('image/png');\r\n      } else {\r\n        img = image;\r\n        callback(img);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageCropperComponent } from './image-cropper.component';\n\n@NgModule({\n  declarations: [ImageCropperComponent],\n  exports: [ImageCropperComponent],\n  imports: [CommonModule]\n})\nexport class ImageCropperModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageCropperService {\n  constructor() {}\n}\n","// looks like this CropService is never used\r\nexport class CropService {\r\n  public canvas: HTMLCanvasElement;\r\n  public ctx: CanvasRenderingContext2D;\r\n\r\n  public init(canvas: HTMLCanvasElement) {\r\n    this.canvas = canvas;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n  }\r\n}\r\n"]}
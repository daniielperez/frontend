/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CropperDrawSettings } from './cropper-draw-settings';
/**
 * @record
 */
export function ICropperSettings() { }
if (false) {
    /** @type {?|undefined} */
    ICropperSettings.prototype.canvasWidth;
    /** @type {?|undefined} */
    ICropperSettings.prototype.canvasHeight;
    /** @type {?|undefined} */
    ICropperSettings.prototype.dynamicSizing;
    /** @type {?|undefined} */
    ICropperSettings.prototype.cropperClass;
    /** @type {?|undefined} */
    ICropperSettings.prototype.croppingClass;
    /** @type {?|undefined} */
    ICropperSettings.prototype.width;
    /** @type {?|undefined} */
    ICropperSettings.prototype.height;
    /** @type {?|undefined} */
    ICropperSettings.prototype.minWidth;
    /** @type {?|undefined} */
    ICropperSettings.prototype.minHeight;
    /** @type {?|undefined} */
    ICropperSettings.prototype.minWithRelativeToResolution;
    /** @type {?|undefined} */
    ICropperSettings.prototype.croppedWidth;
    /** @type {?|undefined} */
    ICropperSettings.prototype.croppedHeight;
    /** @type {?|undefined} */
    ICropperSettings.prototype.cropperDrawSettings;
    /** @type {?|undefined} */
    ICropperSettings.prototype.touchRadius;
    /** @type {?|undefined} */
    ICropperSettings.prototype.noFileInput;
    /** @type {?|undefined} */
    ICropperSettings.prototype.fileType;
    /** @type {?|undefined} */
    ICropperSettings.prototype.resampleFn;
    /** @type {?|undefined} */
    ICropperSettings.prototype.markerSizeMultiplier;
    /** @type {?|undefined} */
    ICropperSettings.prototype.centerTouchRadius;
    /** @type {?|undefined} */
    ICropperSettings.prototype.showCenterMarker;
    /** @type {?|undefined} */
    ICropperSettings.prototype.allowedFilesRegex;
    /** @type {?|undefined} */
    ICropperSettings.prototype.cropOnResize;
    /** @type {?|undefined} */
    ICropperSettings.prototype.preserveSize;
    /** @type {?|undefined} */
    ICropperSettings.prototype.compressRatio;
    /** @type {?|undefined} */
    ICropperSettings.prototype.rounded;
    /** @type {?|undefined} */
    ICropperSettings.prototype.keepAspect;
}
var CropperSettings = /** @class */ (function () {
    function CropperSettings(settings) {
        this.canvasWidth = 300;
        this.canvasHeight = 300;
        this.dynamicSizing = false;
        this.width = 200;
        this.height = 200;
        this.minWidth = 50;
        this.minHeight = 50;
        this.minWithRelativeToResolution = true;
        this.croppedWidth = 100;
        this.croppedHeight = 100;
        this.cropperDrawSettings = new CropperDrawSettings();
        this.touchRadius = 20;
        this.noFileInput = false;
        this.markerSizeMultiplier = 1;
        this.centerTouchRadius = 20;
        this.showCenterMarker = true;
        this.allowedFilesRegex = /\.(jpe?g|png|gif|bmp)$/i;
        this.cropOnResize = true;
        this.preserveSize = false;
        this.compressRatio = 1.0;
        // tslint:disable-next-line:variable-name
        this._rounded = false;
        // tslint:disable-next-line:variable-name
        this._keepAspect = true;
        if (typeof settings === 'object') {
            Object.assign(this, settings);
        }
    }
    Object.defineProperty(CropperSettings.prototype, "rounded", {
        get: /**
         * @return {?}
         */
        function () {
            return this._rounded;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._rounded = val;
            if (val) {
                this._keepAspect = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CropperSettings.prototype, "keepAspect", {
        get: /**
         * @return {?}
         */
        function () {
            return this._keepAspect;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._keepAspect = val;
            if (this._rounded === true && this._keepAspect === false) {
                console.error('Cannot set keep aspect to false on rounded cropper. Ellipsis not supported');
                this._keepAspect = true;
            }
        },
        enumerable: true,
        configurable: true
    });
    return CropperSettings;
}());
export { CropperSettings };
if (false) {
    /** @type {?} */
    CropperSettings.prototype.canvasWidth;
    /** @type {?} */
    CropperSettings.prototype.canvasHeight;
    /** @type {?} */
    CropperSettings.prototype.dynamicSizing;
    /** @type {?} */
    CropperSettings.prototype.cropperClass;
    /** @type {?} */
    CropperSettings.prototype.croppingClass;
    /** @type {?} */
    CropperSettings.prototype.width;
    /** @type {?} */
    CropperSettings.prototype.height;
    /** @type {?} */
    CropperSettings.prototype.minWidth;
    /** @type {?} */
    CropperSettings.prototype.minHeight;
    /** @type {?} */
    CropperSettings.prototype.minWithRelativeToResolution;
    /** @type {?} */
    CropperSettings.prototype.croppedWidth;
    /** @type {?} */
    CropperSettings.prototype.croppedHeight;
    /** @type {?} */
    CropperSettings.prototype.cropperDrawSettings;
    /** @type {?} */
    CropperSettings.prototype.touchRadius;
    /** @type {?} */
    CropperSettings.prototype.noFileInput;
    /** @type {?} */
    CropperSettings.prototype.fileType;
    /** @type {?} */
    CropperSettings.prototype.resampleFn;
    /** @type {?} */
    CropperSettings.prototype.markerSizeMultiplier;
    /** @type {?} */
    CropperSettings.prototype.centerTouchRadius;
    /** @type {?} */
    CropperSettings.prototype.showCenterMarker;
    /** @type {?} */
    CropperSettings.prototype.allowedFilesRegex;
    /** @type {?} */
    CropperSettings.prototype.cropOnResize;
    /** @type {?} */
    CropperSettings.prototype.preserveSize;
    /** @type {?} */
    CropperSettings.prototype.compressRatio;
    /**
     * @type {?}
     * @private
     */
    CropperSettings.prototype._rounded;
    /**
     * @type {?}
     * @private
     */
    CropperSettings.prototype._keepAspect;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JvcHBlci1zZXR0aW5ncy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1pbWctY3JvcHBlci8iLCJzb3VyY2VzIjpbImxpYi9pbWFnZS1jcm9wcGVyL2Nyb3BwZXItc2V0dGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDOzs7O0FBRTlELHNDQTJCQzs7O0lBMUJDLHVDQUFxQjs7SUFDckIsd0NBQXNCOztJQUN0Qix5Q0FBd0I7O0lBQ3hCLHdDQUFzQjs7SUFDdEIseUNBQXVCOztJQUN2QixpQ0FBZTs7SUFDZixrQ0FBZ0I7O0lBQ2hCLG9DQUFrQjs7SUFDbEIscUNBQW1COztJQUNuQix1REFBc0M7O0lBQ3RDLHdDQUFzQjs7SUFDdEIseUNBQXVCOztJQUN2QiwrQ0FBMEI7O0lBQzFCLHVDQUFxQjs7SUFDckIsdUNBQXNCOztJQUN0QixvQ0FBa0I7O0lBQ2xCLHNDQUE0Qzs7SUFDNUMsZ0RBQThCOztJQUM5Qiw2Q0FBMkI7O0lBQzNCLDRDQUEyQjs7SUFDM0IsNkNBQTJCOztJQUMzQix3Q0FBdUI7O0lBQ3ZCLHdDQUF1Qjs7SUFDdkIseUNBQXVCOztJQUN2QixtQ0FBa0I7O0lBQ2xCLHNDQUFxQjs7QUFHdkI7SUF5Q0UseUJBQVksUUFBMkI7UUF4Q2hDLGdCQUFXLEdBQUcsR0FBRyxDQUFDO1FBQ2xCLGlCQUFZLEdBQUcsR0FBRyxDQUFDO1FBRW5CLGtCQUFhLEdBQUcsS0FBSyxDQUFDO1FBSXRCLFVBQUssR0FBRyxHQUFHLENBQUM7UUFDWixXQUFNLEdBQUcsR0FBRyxDQUFDO1FBRWIsYUFBUSxHQUFHLEVBQUUsQ0FBQztRQUNkLGNBQVMsR0FBRyxFQUFFLENBQUM7UUFDZixnQ0FBMkIsR0FBRyxJQUFJLENBQUM7UUFFbkMsaUJBQVksR0FBRyxHQUFHLENBQUM7UUFDbkIsa0JBQWEsR0FBRyxHQUFHLENBQUM7UUFFcEIsd0JBQW1CLEdBQXdCLElBQUksbUJBQW1CLEVBQUUsQ0FBQztRQUNyRSxnQkFBVyxHQUFHLEVBQUUsQ0FBQztRQUNqQixnQkFBVyxHQUFHLEtBQUssQ0FBQztRQU1wQix5QkFBb0IsR0FBRyxDQUFDLENBQUM7UUFDekIsc0JBQWlCLEdBQUcsRUFBRSxDQUFDO1FBQ3ZCLHFCQUFnQixHQUFHLElBQUksQ0FBQztRQUV4QixzQkFBaUIsR0FBVyx5QkFBeUIsQ0FBQztRQUN0RCxpQkFBWSxHQUFHLElBQUksQ0FBQztRQUNwQixpQkFBWSxHQUFHLEtBQUssQ0FBQztRQUVyQixrQkFBYSxHQUFHLEdBQUcsQ0FBQzs7UUFHbkIsYUFBUSxHQUFHLEtBQUssQ0FBQzs7UUFFakIsZ0JBQVcsR0FBRyxJQUFJLENBQUM7UUFHekIsSUFBSSxPQUFPLFFBQVEsS0FBSyxRQUFRLEVBQUU7WUFDaEMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7U0FDL0I7SUFDSCxDQUFDO0lBRUQsc0JBQUksb0NBQU87Ozs7UUFPWDtZQUNFLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztRQUN2QixDQUFDOzs7OztRQVRELFVBQVksR0FBWTtZQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQztZQUNwQixJQUFJLEdBQUcsRUFBRTtnQkFDUCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQzthQUN6QjtRQUNILENBQUM7OztPQUFBO0lBTUQsc0JBQUksdUNBQVU7Ozs7UUFVZDtZQUNFLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztRQUMxQixDQUFDOzs7OztRQVpELFVBQWUsR0FBWTtZQUN6QixJQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQztZQUN2QixJQUFJLElBQUksQ0FBQyxRQUFRLEtBQUssSUFBSSxJQUFJLElBQUksQ0FBQyxXQUFXLEtBQUssS0FBSyxFQUFFO2dCQUN4RCxPQUFPLENBQUMsS0FBSyxDQUNYLDRFQUE0RSxDQUM3RSxDQUFDO2dCQUNGLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO2FBQ3pCO1FBQ0gsQ0FBQzs7O09BQUE7SUFLSCxzQkFBQztBQUFELENBQUMsQUF2RUQsSUF1RUM7Ozs7SUF0RUMsc0NBQXlCOztJQUN6Qix1Q0FBMEI7O0lBRTFCLHdDQUE2Qjs7SUFDN0IsdUNBQTRCOztJQUM1Qix3Q0FBNkI7O0lBRTdCLGdDQUFtQjs7SUFDbkIsaUNBQW9COztJQUVwQixtQ0FBcUI7O0lBQ3JCLG9DQUFzQjs7SUFDdEIsc0RBQTBDOztJQUUxQyx1Q0FBMEI7O0lBQzFCLHdDQUEyQjs7SUFFM0IsOENBQTRFOztJQUM1RSxzQ0FBd0I7O0lBQ3hCLHNDQUEyQjs7SUFFM0IsbUNBQXdCOztJQUV4QixxQ0FBa0Q7O0lBRWxELCtDQUFnQzs7SUFDaEMsNENBQThCOztJQUM5QiwyQ0FBK0I7O0lBRS9CLDRDQUE2RDs7SUFDN0QsdUNBQTJCOztJQUMzQix1Q0FBNEI7O0lBRTVCLHdDQUEyQjs7Ozs7SUFHM0IsbUNBQXlCOzs7OztJQUV6QixzQ0FBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcm9wcGVyRHJhd1NldHRpbmdzIH0gZnJvbSAnLi9jcm9wcGVyLWRyYXctc2V0dGluZ3MnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBJQ3JvcHBlclNldHRpbmdzIHtcclxuICBjYW52YXNXaWR0aD86IG51bWJlcjtcclxuICBjYW52YXNIZWlnaHQ/OiBudW1iZXI7XHJcbiAgZHluYW1pY1NpemluZz86IGJvb2xlYW47XHJcbiAgY3JvcHBlckNsYXNzPzogc3RyaW5nO1xyXG4gIGNyb3BwaW5nQ2xhc3M/OiBzdHJpbmc7XHJcbiAgd2lkdGg/OiBudW1iZXI7XHJcbiAgaGVpZ2h0PzogbnVtYmVyO1xyXG4gIG1pbldpZHRoPzogbnVtYmVyO1xyXG4gIG1pbkhlaWdodD86IG51bWJlcjtcclxuICBtaW5XaXRoUmVsYXRpdmVUb1Jlc29sdXRpb24/OiBib29sZWFuO1xyXG4gIGNyb3BwZWRXaWR0aD86IG51bWJlcjtcclxuICBjcm9wcGVkSGVpZ2h0PzogbnVtYmVyO1xyXG4gIGNyb3BwZXJEcmF3U2V0dGluZ3M/OiBhbnk7XHJcbiAgdG91Y2hSYWRpdXM/OiBudW1iZXI7XHJcbiAgbm9GaWxlSW5wdXQ/OiBib29sZWFuO1xyXG4gIGZpbGVUeXBlPzogc3RyaW5nO1xyXG4gIHJlc2FtcGxlRm4/OiAoYzogSFRNTENhbnZhc0VsZW1lbnQpID0+IHZvaWQ7XHJcbiAgbWFya2VyU2l6ZU11bHRpcGxpZXI/OiBudW1iZXI7XHJcbiAgY2VudGVyVG91Y2hSYWRpdXM/OiBudW1iZXI7XHJcbiAgc2hvd0NlbnRlck1hcmtlcj86IGJvb2xlYW47XHJcbiAgYWxsb3dlZEZpbGVzUmVnZXg/OiBSZWdFeHA7XHJcbiAgY3JvcE9uUmVzaXplPzogYm9vbGVhbjtcclxuICBwcmVzZXJ2ZVNpemU/OiBib29sZWFuO1xyXG4gIGNvbXByZXNzUmF0aW8/OiBudW1iZXI7XHJcbiAgcm91bmRlZD86IGJvb2xlYW47XHJcbiAga2VlcEFzcGVjdD86IGJvb2xlYW47XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBDcm9wcGVyU2V0dGluZ3MgaW1wbGVtZW50cyBJQ3JvcHBlclNldHRpbmdzIHtcclxuICBwdWJsaWMgY2FudmFzV2lkdGggPSAzMDA7XHJcbiAgcHVibGljIGNhbnZhc0hlaWdodCA9IDMwMDtcclxuXHJcbiAgcHVibGljIGR5bmFtaWNTaXppbmcgPSBmYWxzZTtcclxuICBwdWJsaWMgY3JvcHBlckNsYXNzOiBzdHJpbmc7XHJcbiAgcHVibGljIGNyb3BwaW5nQ2xhc3M6IHN0cmluZztcclxuXHJcbiAgcHVibGljIHdpZHRoID0gMjAwO1xyXG4gIHB1YmxpYyBoZWlnaHQgPSAyMDA7XHJcblxyXG4gIHB1YmxpYyBtaW5XaWR0aCA9IDUwO1xyXG4gIHB1YmxpYyBtaW5IZWlnaHQgPSA1MDtcclxuICBwdWJsaWMgbWluV2l0aFJlbGF0aXZlVG9SZXNvbHV0aW9uID0gdHJ1ZTtcclxuXHJcbiAgcHVibGljIGNyb3BwZWRXaWR0aCA9IDEwMDtcclxuICBwdWJsaWMgY3JvcHBlZEhlaWdodCA9IDEwMDtcclxuXHJcbiAgcHVibGljIGNyb3BwZXJEcmF3U2V0dGluZ3M6IENyb3BwZXJEcmF3U2V0dGluZ3MgPSBuZXcgQ3JvcHBlckRyYXdTZXR0aW5ncygpO1xyXG4gIHB1YmxpYyB0b3VjaFJhZGl1cyA9IDIwO1xyXG4gIHB1YmxpYyBub0ZpbGVJbnB1dCA9IGZhbHNlO1xyXG5cclxuICBwdWJsaWMgZmlsZVR5cGU6IHN0cmluZztcclxuXHJcbiAgcHVibGljIHJlc2FtcGxlRm46IChjOiBIVE1MQ2FudmFzRWxlbWVudCkgPT4gdm9pZDtcclxuXHJcbiAgcHVibGljIG1hcmtlclNpemVNdWx0aXBsaWVyID0gMTtcclxuICBwdWJsaWMgY2VudGVyVG91Y2hSYWRpdXMgPSAyMDtcclxuICBwdWJsaWMgc2hvd0NlbnRlck1hcmtlciA9IHRydWU7XHJcblxyXG4gIHB1YmxpYyBhbGxvd2VkRmlsZXNSZWdleDogUmVnRXhwID0gL1xcLihqcGU/Z3xwbmd8Z2lmfGJtcCkkL2k7XHJcbiAgcHVibGljIGNyb3BPblJlc2l6ZSA9IHRydWU7XHJcbiAgcHVibGljIHByZXNlcnZlU2l6ZSA9IGZhbHNlO1xyXG5cclxuICBwdWJsaWMgY29tcHJlc3NSYXRpbyA9IDEuMDtcclxuXHJcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOnZhcmlhYmxlLW5hbWVcclxuICBwcml2YXRlIF9yb3VuZGVkID0gZmFsc2U7XHJcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOnZhcmlhYmxlLW5hbWVcclxuICBwcml2YXRlIF9rZWVwQXNwZWN0ID0gdHJ1ZTtcclxuXHJcbiAgY29uc3RydWN0b3Ioc2V0dGluZ3M/OiBJQ3JvcHBlclNldHRpbmdzKSB7XHJcbiAgICBpZiAodHlwZW9mIHNldHRpbmdzID09PSAnb2JqZWN0Jykge1xyXG4gICAgICBPYmplY3QuYXNzaWduKHRoaXMsIHNldHRpbmdzKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHNldCByb3VuZGVkKHZhbDogYm9vbGVhbikge1xyXG4gICAgdGhpcy5fcm91bmRlZCA9IHZhbDtcclxuICAgIGlmICh2YWwpIHtcclxuICAgICAgdGhpcy5fa2VlcEFzcGVjdCA9IHRydWU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXQgcm91bmRlZCgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLl9yb3VuZGVkO1xyXG4gIH1cclxuXHJcbiAgc2V0IGtlZXBBc3BlY3QodmFsOiBib29sZWFuKSB7XHJcbiAgICB0aGlzLl9rZWVwQXNwZWN0ID0gdmFsO1xyXG4gICAgaWYgKHRoaXMuX3JvdW5kZWQgPT09IHRydWUgJiYgdGhpcy5fa2VlcEFzcGVjdCA9PT0gZmFsc2UpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcclxuICAgICAgICAnQ2Fubm90IHNldCBrZWVwIGFzcGVjdCB0byBmYWxzZSBvbiByb3VuZGVkIGNyb3BwZXIuIEVsbGlwc2lzIG5vdCBzdXBwb3J0ZWQnXHJcbiAgICAgICk7XHJcbiAgICAgIHRoaXMuX2tlZXBBc3BlY3QgPSB0cnVlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZ2V0IGtlZXBBc3BlY3QoKTogYm9vbGVhbiB7XHJcbiAgICByZXR1cm4gdGhpcy5fa2VlcEFzcGVjdDtcclxuICB9XHJcbn1cclxuIl19
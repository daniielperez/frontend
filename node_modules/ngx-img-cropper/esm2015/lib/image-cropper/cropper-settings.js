/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CropperDrawSettings } from './cropper-draw-settings';
/**
 * @record
 */
export function ICropperSettings() { }
if (false) {
    /** @type {?|undefined} */
    ICropperSettings.prototype.canvasWidth;
    /** @type {?|undefined} */
    ICropperSettings.prototype.canvasHeight;
    /** @type {?|undefined} */
    ICropperSettings.prototype.dynamicSizing;
    /** @type {?|undefined} */
    ICropperSettings.prototype.cropperClass;
    /** @type {?|undefined} */
    ICropperSettings.prototype.croppingClass;
    /** @type {?|undefined} */
    ICropperSettings.prototype.width;
    /** @type {?|undefined} */
    ICropperSettings.prototype.height;
    /** @type {?|undefined} */
    ICropperSettings.prototype.minWidth;
    /** @type {?|undefined} */
    ICropperSettings.prototype.minHeight;
    /** @type {?|undefined} */
    ICropperSettings.prototype.minWithRelativeToResolution;
    /** @type {?|undefined} */
    ICropperSettings.prototype.croppedWidth;
    /** @type {?|undefined} */
    ICropperSettings.prototype.croppedHeight;
    /** @type {?|undefined} */
    ICropperSettings.prototype.cropperDrawSettings;
    /** @type {?|undefined} */
    ICropperSettings.prototype.touchRadius;
    /** @type {?|undefined} */
    ICropperSettings.prototype.noFileInput;
    /** @type {?|undefined} */
    ICropperSettings.prototype.fileType;
    /** @type {?|undefined} */
    ICropperSettings.prototype.resampleFn;
    /** @type {?|undefined} */
    ICropperSettings.prototype.markerSizeMultiplier;
    /** @type {?|undefined} */
    ICropperSettings.prototype.centerTouchRadius;
    /** @type {?|undefined} */
    ICropperSettings.prototype.showCenterMarker;
    /** @type {?|undefined} */
    ICropperSettings.prototype.allowedFilesRegex;
    /** @type {?|undefined} */
    ICropperSettings.prototype.cropOnResize;
    /** @type {?|undefined} */
    ICropperSettings.prototype.preserveSize;
    /** @type {?|undefined} */
    ICropperSettings.prototype.compressRatio;
    /** @type {?|undefined} */
    ICropperSettings.prototype.rounded;
    /** @type {?|undefined} */
    ICropperSettings.prototype.keepAspect;
}
export class CropperSettings {
    /**
     * @param {?=} settings
     */
    constructor(settings) {
        this.canvasWidth = 300;
        this.canvasHeight = 300;
        this.dynamicSizing = false;
        this.width = 200;
        this.height = 200;
        this.minWidth = 50;
        this.minHeight = 50;
        this.minWithRelativeToResolution = true;
        this.croppedWidth = 100;
        this.croppedHeight = 100;
        this.cropperDrawSettings = new CropperDrawSettings();
        this.touchRadius = 20;
        this.noFileInput = false;
        this.markerSizeMultiplier = 1;
        this.centerTouchRadius = 20;
        this.showCenterMarker = true;
        this.allowedFilesRegex = /\.(jpe?g|png|gif|bmp)$/i;
        this.cropOnResize = true;
        this.preserveSize = false;
        this.compressRatio = 1.0;
        // tslint:disable-next-line:variable-name
        this._rounded = false;
        // tslint:disable-next-line:variable-name
        this._keepAspect = true;
        if (typeof settings === 'object') {
            Object.assign(this, settings);
        }
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set rounded(val) {
        this._rounded = val;
        if (val) {
            this._keepAspect = true;
        }
    }
    /**
     * @return {?}
     */
    get rounded() {
        return this._rounded;
    }
    /**
     * @param {?} val
     * @return {?}
     */
    set keepAspect(val) {
        this._keepAspect = val;
        if (this._rounded === true && this._keepAspect === false) {
            console.error('Cannot set keep aspect to false on rounded cropper. Ellipsis not supported');
            this._keepAspect = true;
        }
    }
    /**
     * @return {?}
     */
    get keepAspect() {
        return this._keepAspect;
    }
}
if (false) {
    /** @type {?} */
    CropperSettings.prototype.canvasWidth;
    /** @type {?} */
    CropperSettings.prototype.canvasHeight;
    /** @type {?} */
    CropperSettings.prototype.dynamicSizing;
    /** @type {?} */
    CropperSettings.prototype.cropperClass;
    /** @type {?} */
    CropperSettings.prototype.croppingClass;
    /** @type {?} */
    CropperSettings.prototype.width;
    /** @type {?} */
    CropperSettings.prototype.height;
    /** @type {?} */
    CropperSettings.prototype.minWidth;
    /** @type {?} */
    CropperSettings.prototype.minHeight;
    /** @type {?} */
    CropperSettings.prototype.minWithRelativeToResolution;
    /** @type {?} */
    CropperSettings.prototype.croppedWidth;
    /** @type {?} */
    CropperSettings.prototype.croppedHeight;
    /** @type {?} */
    CropperSettings.prototype.cropperDrawSettings;
    /** @type {?} */
    CropperSettings.prototype.touchRadius;
    /** @type {?} */
    CropperSettings.prototype.noFileInput;
    /** @type {?} */
    CropperSettings.prototype.fileType;
    /** @type {?} */
    CropperSettings.prototype.resampleFn;
    /** @type {?} */
    CropperSettings.prototype.markerSizeMultiplier;
    /** @type {?} */
    CropperSettings.prototype.centerTouchRadius;
    /** @type {?} */
    CropperSettings.prototype.showCenterMarker;
    /** @type {?} */
    CropperSettings.prototype.allowedFilesRegex;
    /** @type {?} */
    CropperSettings.prototype.cropOnResize;
    /** @type {?} */
    CropperSettings.prototype.preserveSize;
    /** @type {?} */
    CropperSettings.prototype.compressRatio;
    /**
     * @type {?}
     * @private
     */
    CropperSettings.prototype._rounded;
    /**
     * @type {?}
     * @private
     */
    CropperSettings.prototype._keepAspect;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JvcHBlci1zZXR0aW5ncy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1pbWctY3JvcHBlci8iLCJzb3VyY2VzIjpbImxpYi9pbWFnZS1jcm9wcGVyL2Nyb3BwZXItc2V0dGluZ3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDOzs7O0FBRTlELHNDQTJCQzs7O0lBMUJDLHVDQUFxQjs7SUFDckIsd0NBQXNCOztJQUN0Qix5Q0FBd0I7O0lBQ3hCLHdDQUFzQjs7SUFDdEIseUNBQXVCOztJQUN2QixpQ0FBZTs7SUFDZixrQ0FBZ0I7O0lBQ2hCLG9DQUFrQjs7SUFDbEIscUNBQW1COztJQUNuQix1REFBc0M7O0lBQ3RDLHdDQUFzQjs7SUFDdEIseUNBQXVCOztJQUN2QiwrQ0FBMEI7O0lBQzFCLHVDQUFxQjs7SUFDckIsdUNBQXNCOztJQUN0QixvQ0FBa0I7O0lBQ2xCLHNDQUE0Qzs7SUFDNUMsZ0RBQThCOztJQUM5Qiw2Q0FBMkI7O0lBQzNCLDRDQUEyQjs7SUFDM0IsNkNBQTJCOztJQUMzQix3Q0FBdUI7O0lBQ3ZCLHdDQUF1Qjs7SUFDdkIseUNBQXVCOztJQUN2QixtQ0FBa0I7O0lBQ2xCLHNDQUFxQjs7QUFHdkIsTUFBTSxPQUFPLGVBQWU7Ozs7SUF5QzFCLFlBQVksUUFBMkI7UUF4Q2hDLGdCQUFXLEdBQUcsR0FBRyxDQUFDO1FBQ2xCLGlCQUFZLEdBQUcsR0FBRyxDQUFDO1FBRW5CLGtCQUFhLEdBQUcsS0FBSyxDQUFDO1FBSXRCLFVBQUssR0FBRyxHQUFHLENBQUM7UUFDWixXQUFNLEdBQUcsR0FBRyxDQUFDO1FBRWIsYUFBUSxHQUFHLEVBQUUsQ0FBQztRQUNkLGNBQVMsR0FBRyxFQUFFLENBQUM7UUFDZixnQ0FBMkIsR0FBRyxJQUFJLENBQUM7UUFFbkMsaUJBQVksR0FBRyxHQUFHLENBQUM7UUFDbkIsa0JBQWEsR0FBRyxHQUFHLENBQUM7UUFFcEIsd0JBQW1CLEdBQXdCLElBQUksbUJBQW1CLEVBQUUsQ0FBQztRQUNyRSxnQkFBVyxHQUFHLEVBQUUsQ0FBQztRQUNqQixnQkFBVyxHQUFHLEtBQUssQ0FBQztRQU1wQix5QkFBb0IsR0FBRyxDQUFDLENBQUM7UUFDekIsc0JBQWlCLEdBQUcsRUFBRSxDQUFDO1FBQ3ZCLHFCQUFnQixHQUFHLElBQUksQ0FBQztRQUV4QixzQkFBaUIsR0FBVyx5QkFBeUIsQ0FBQztRQUN0RCxpQkFBWSxHQUFHLElBQUksQ0FBQztRQUNwQixpQkFBWSxHQUFHLEtBQUssQ0FBQztRQUVyQixrQkFBYSxHQUFHLEdBQUcsQ0FBQzs7UUFHbkIsYUFBUSxHQUFHLEtBQUssQ0FBQzs7UUFFakIsZ0JBQVcsR0FBRyxJQUFJLENBQUM7UUFHekIsSUFBSSxPQUFPLFFBQVEsS0FBSyxRQUFRLEVBQUU7WUFDaEMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7U0FDL0I7SUFDSCxDQUFDOzs7OztJQUVELElBQUksT0FBTyxDQUFDLEdBQVk7UUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxHQUFHLENBQUM7UUFDcEIsSUFBSSxHQUFHLEVBQUU7WUFDUCxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQztTQUN6QjtJQUNILENBQUM7Ozs7SUFFRCxJQUFJLE9BQU87UUFDVCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDdkIsQ0FBQzs7Ozs7SUFFRCxJQUFJLFVBQVUsQ0FBQyxHQUFZO1FBQ3pCLElBQUksQ0FBQyxXQUFXLEdBQUcsR0FBRyxDQUFDO1FBQ3ZCLElBQUksSUFBSSxDQUFDLFFBQVEsS0FBSyxJQUFJLElBQUksSUFBSSxDQUFDLFdBQVcsS0FBSyxLQUFLLEVBQUU7WUFDeEQsT0FBTyxDQUFDLEtBQUssQ0FDWCw0RUFBNEUsQ0FDN0UsQ0FBQztZQUNGLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQzs7OztJQUVELElBQUksVUFBVTtRQUNaLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMxQixDQUFDO0NBQ0Y7OztJQXRFQyxzQ0FBeUI7O0lBQ3pCLHVDQUEwQjs7SUFFMUIsd0NBQTZCOztJQUM3Qix1Q0FBNEI7O0lBQzVCLHdDQUE2Qjs7SUFFN0IsZ0NBQW1COztJQUNuQixpQ0FBb0I7O0lBRXBCLG1DQUFxQjs7SUFDckIsb0NBQXNCOztJQUN0QixzREFBMEM7O0lBRTFDLHVDQUEwQjs7SUFDMUIsd0NBQTJCOztJQUUzQiw4Q0FBNEU7O0lBQzVFLHNDQUF3Qjs7SUFDeEIsc0NBQTJCOztJQUUzQixtQ0FBd0I7O0lBRXhCLHFDQUFrRDs7SUFFbEQsK0NBQWdDOztJQUNoQyw0Q0FBOEI7O0lBQzlCLDJDQUErQjs7SUFFL0IsNENBQTZEOztJQUM3RCx1Q0FBMkI7O0lBQzNCLHVDQUE0Qjs7SUFFNUIsd0NBQTJCOzs7OztJQUczQixtQ0FBeUI7Ozs7O0lBRXpCLHNDQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENyb3BwZXJEcmF3U2V0dGluZ3MgfSBmcm9tICcuL2Nyb3BwZXItZHJhdy1zZXR0aW5ncyc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElDcm9wcGVyU2V0dGluZ3Mge1xyXG4gIGNhbnZhc1dpZHRoPzogbnVtYmVyO1xyXG4gIGNhbnZhc0hlaWdodD86IG51bWJlcjtcclxuICBkeW5hbWljU2l6aW5nPzogYm9vbGVhbjtcclxuICBjcm9wcGVyQ2xhc3M/OiBzdHJpbmc7XHJcbiAgY3JvcHBpbmdDbGFzcz86IHN0cmluZztcclxuICB3aWR0aD86IG51bWJlcjtcclxuICBoZWlnaHQ/OiBudW1iZXI7XHJcbiAgbWluV2lkdGg/OiBudW1iZXI7XHJcbiAgbWluSGVpZ2h0PzogbnVtYmVyO1xyXG4gIG1pbldpdGhSZWxhdGl2ZVRvUmVzb2x1dGlvbj86IGJvb2xlYW47XHJcbiAgY3JvcHBlZFdpZHRoPzogbnVtYmVyO1xyXG4gIGNyb3BwZWRIZWlnaHQ/OiBudW1iZXI7XHJcbiAgY3JvcHBlckRyYXdTZXR0aW5ncz86IGFueTtcclxuICB0b3VjaFJhZGl1cz86IG51bWJlcjtcclxuICBub0ZpbGVJbnB1dD86IGJvb2xlYW47XHJcbiAgZmlsZVR5cGU/OiBzdHJpbmc7XHJcbiAgcmVzYW1wbGVGbj86IChjOiBIVE1MQ2FudmFzRWxlbWVudCkgPT4gdm9pZDtcclxuICBtYXJrZXJTaXplTXVsdGlwbGllcj86IG51bWJlcjtcclxuICBjZW50ZXJUb3VjaFJhZGl1cz86IG51bWJlcjtcclxuICBzaG93Q2VudGVyTWFya2VyPzogYm9vbGVhbjtcclxuICBhbGxvd2VkRmlsZXNSZWdleD86IFJlZ0V4cDtcclxuICBjcm9wT25SZXNpemU/OiBib29sZWFuO1xyXG4gIHByZXNlcnZlU2l6ZT86IGJvb2xlYW47XHJcbiAgY29tcHJlc3NSYXRpbz86IG51bWJlcjtcclxuICByb3VuZGVkPzogYm9vbGVhbjtcclxuICBrZWVwQXNwZWN0PzogYm9vbGVhbjtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIENyb3BwZXJTZXR0aW5ncyBpbXBsZW1lbnRzIElDcm9wcGVyU2V0dGluZ3Mge1xyXG4gIHB1YmxpYyBjYW52YXNXaWR0aCA9IDMwMDtcclxuICBwdWJsaWMgY2FudmFzSGVpZ2h0ID0gMzAwO1xyXG5cclxuICBwdWJsaWMgZHluYW1pY1NpemluZyA9IGZhbHNlO1xyXG4gIHB1YmxpYyBjcm9wcGVyQ2xhc3M6IHN0cmluZztcclxuICBwdWJsaWMgY3JvcHBpbmdDbGFzczogc3RyaW5nO1xyXG5cclxuICBwdWJsaWMgd2lkdGggPSAyMDA7XHJcbiAgcHVibGljIGhlaWdodCA9IDIwMDtcclxuXHJcbiAgcHVibGljIG1pbldpZHRoID0gNTA7XHJcbiAgcHVibGljIG1pbkhlaWdodCA9IDUwO1xyXG4gIHB1YmxpYyBtaW5XaXRoUmVsYXRpdmVUb1Jlc29sdXRpb24gPSB0cnVlO1xyXG5cclxuICBwdWJsaWMgY3JvcHBlZFdpZHRoID0gMTAwO1xyXG4gIHB1YmxpYyBjcm9wcGVkSGVpZ2h0ID0gMTAwO1xyXG5cclxuICBwdWJsaWMgY3JvcHBlckRyYXdTZXR0aW5nczogQ3JvcHBlckRyYXdTZXR0aW5ncyA9IG5ldyBDcm9wcGVyRHJhd1NldHRpbmdzKCk7XHJcbiAgcHVibGljIHRvdWNoUmFkaXVzID0gMjA7XHJcbiAgcHVibGljIG5vRmlsZUlucHV0ID0gZmFsc2U7XHJcblxyXG4gIHB1YmxpYyBmaWxlVHlwZTogc3RyaW5nO1xyXG5cclxuICBwdWJsaWMgcmVzYW1wbGVGbjogKGM6IEhUTUxDYW52YXNFbGVtZW50KSA9PiB2b2lkO1xyXG5cclxuICBwdWJsaWMgbWFya2VyU2l6ZU11bHRpcGxpZXIgPSAxO1xyXG4gIHB1YmxpYyBjZW50ZXJUb3VjaFJhZGl1cyA9IDIwO1xyXG4gIHB1YmxpYyBzaG93Q2VudGVyTWFya2VyID0gdHJ1ZTtcclxuXHJcbiAgcHVibGljIGFsbG93ZWRGaWxlc1JlZ2V4OiBSZWdFeHAgPSAvXFwuKGpwZT9nfHBuZ3xnaWZ8Ym1wKSQvaTtcclxuICBwdWJsaWMgY3JvcE9uUmVzaXplID0gdHJ1ZTtcclxuICBwdWJsaWMgcHJlc2VydmVTaXplID0gZmFsc2U7XHJcblxyXG4gIHB1YmxpYyBjb21wcmVzc1JhdGlvID0gMS4wO1xyXG5cclxuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6dmFyaWFibGUtbmFtZVxyXG4gIHByaXZhdGUgX3JvdW5kZWQgPSBmYWxzZTtcclxuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6dmFyaWFibGUtbmFtZVxyXG4gIHByaXZhdGUgX2tlZXBBc3BlY3QgPSB0cnVlO1xyXG5cclxuICBjb25zdHJ1Y3RvcihzZXR0aW5ncz86IElDcm9wcGVyU2V0dGluZ3MpIHtcclxuICAgIGlmICh0eXBlb2Ygc2V0dGluZ3MgPT09ICdvYmplY3QnKSB7XHJcbiAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgc2V0dGluZ3MpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2V0IHJvdW5kZWQodmFsOiBib29sZWFuKSB7XHJcbiAgICB0aGlzLl9yb3VuZGVkID0gdmFsO1xyXG4gICAgaWYgKHZhbCkge1xyXG4gICAgICB0aGlzLl9rZWVwQXNwZWN0ID0gdHJ1ZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldCByb3VuZGVkKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIHRoaXMuX3JvdW5kZWQ7XHJcbiAgfVxyXG5cclxuICBzZXQga2VlcEFzcGVjdCh2YWw6IGJvb2xlYW4pIHtcclxuICAgIHRoaXMuX2tlZXBBc3BlY3QgPSB2YWw7XHJcbiAgICBpZiAodGhpcy5fcm91bmRlZCA9PT0gdHJ1ZSAmJiB0aGlzLl9rZWVwQXNwZWN0ID09PSBmYWxzZSkge1xyXG4gICAgICBjb25zb2xlLmVycm9yKFxyXG4gICAgICAgICdDYW5ub3Qgc2V0IGtlZXAgYXNwZWN0IHRvIGZhbHNlIG9uIHJvdW5kZWQgY3JvcHBlci4gRWxsaXBzaXMgbm90IHN1cHBvcnRlZCdcclxuICAgICAgKTtcclxuICAgICAgdGhpcy5fa2VlcEFzcGVjdCA9IHRydWU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBnZXQga2VlcEFzcGVjdCgpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLl9rZWVwQXNwZWN0O1xyXG4gIH1cclxufVxyXG4iXX0=